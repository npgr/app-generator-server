<!-- list template: version 7.03 -->
<% if (crud == "crud6") { 
%> >% 
 function lng(word) {
	return __("word")
 }
 function lng(word1, word2, word3) {
	return __(word1, word2, word3)
 }
%<  <% } 
 function srv(crud, word) {
	if (crud == "crud6")
		return ">%= lng('" + word + "')%<"
	 else
	    return word
} %>
<html>
<head><meta charset="UTF-8"><%
  if (crud == "crud6") { %>
	<title>>%= lng("%s %s",lng("List"),lng("<%= title%>"))%<</title><%
  } else { %>	
	<title>List <%= title%></title><% 
  } %>
	<script src="/bower_components/webcomponentsjs/webcomponents.min.js"></script>
	<script src="/bower_components/intro.js/minified/intro.min.js"></script>
	<script src="/js2/lokijs/build/lokijs.min.js"></script>
	<script src="/js2/x2js-v1.1.5/xml2json.min.js"></script>
	<script src="/components/app-config/app-config.js"></script>
	<script src="/components/app-util/app-util.js"></script>
	<link rel="stylesheet" href="/styles/app.css">
	<link rel="stylesheet" href="/bower_components/intro.js/minified/introjs.min.css">
	<!-- polymer Components -->
	<link rel="import" href="/bower_components/paper-material/paper-material.html">
	<link rel="import" href="/bower_components/paper-input/paper-input.html">
	<link rel="import" href="/bower_components/paper-fab/paper-fab.html">
	<link rel="import" href="/bower_components/iron-icon/iron-icon.html">
	<link rel="import" href="/bower_components/iron-icons/iron-icons.html">
	<link rel="import" href="/bower_components/iron-dropdown/iron-dropdown.html">
	<link rel="import" href="/bower_components/paper-icon-button/paper-icon-button.html">
	<link rel="import" href="/bower_components/paper-button/paper-button.html">
	<link rel="import" href="/bower_components/paper-dialog/paper-dialog.html">
	<link rel="import" href="/bower_components/paper-menu/paper-menu.html">
	<link rel="import" href="/bower_components/paper-item/paper-item.html">
	<link rel="import" href="/bower_components/iron-ajax/iron-ajax.html">
	<!-- Forms imports -->
	<link rel="import" href="/bower_components/polymer/polymer.html">
	<link rel="import" href="/bower_components/paper-dialog/paper-dialog.html">
	<link rel="import" href="/bower_components/paper-dialog-scrollable/paper-dialog-scrollable.html">
	<link rel="import" href="/bower_components/neon-animation/animations/scale-up-animation.html">
	<link rel="import" href="/bower_components/neon-animation/animations/fade-out-animation.html"><%
  if (crud == "crud5") { %>
	<link rel="import" href="/components/<%= model%>-list-columns/<%= model%>-list-columns.html">
	<link rel="import" href="/components/<%= model%>-new/<%= model%>-new.html">
	<link rel="import" href="/components/<%= model%>-display/<%= model%>-display.html">
	<link rel="import" href="/components/<%= model%>-edit/<%= model%>-edit.html">
	<link rel="import" href="/components/<%= model%>-delete/<%= model%>-delete.html"><%
  }%>
<script><%
 if (ga) {%>
    // Google Analytics
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', Google_Analytics_id(), {'sampleRate': 100});
  ga('send', 'pageview');
<% } %>	
// Redirect to https
  if (window.location.protocol != "https:" && window.location.href.indexOf('localhost') == -1)
	window.location.href = "https:" + window.location.href.substring(window.location.protocol.length);
</script>
<style>
#btn_area {
	display: inline-block;
	margin-left: <%= btn_left%>;
}
#dialog {
	width: <%= dialog_width%>;
}
.card {
	width: <%= card_width%>;
	top: 30px;
	left: 15px;
}
th div {
	display: inline;
}
#menu_dialog {
	position: absolute;
	left: 45px;
}
paper-item {
	min-height: 20px;
	line-height: 35px;
}
paper-dialog {
	margin-top: 0px;
	margin-bottom: 0px;
}
paper-menu {
	margin-top: 0px;
	margin-bottom: 0px;
}
<%= user_point.general_style %>
</style>

<%= topBar %>

<%= columns_form %>

<%= new_form %>

<%= display_form %>

<%= edit_form %>

<%= delete_form %>

<%= select_forms %>

<dom-module id="<%= model%>-list">
<template>
<%= user_point.list_style %>
	<iron-ajax id="ajax" handle-as="json" on-response="load_data" on-error="ajax_error"></iron-ajax><% 
if (columns_form != '') { %>
	<<%= model%>-list-columns id="<%= model%>_list_columns" on-close="update_columns"></<%= model%>-list-columns><% 
} if (new_form != '') { %>
	<<%= model%>-new id="<%= model%>_new_dialog" on-close="reload"></<%= model%>-new><% 
} if (display_form != '') { %>
	<<%= model%>-display id="<%= model%>_display_dialog"></<%= model%>-display><% 
} if (edit_form != '') { %>
	<<%= model%>-edit id="<%= model%>_edit_dialog" on-close="reload"></<%= model%>-edit><% 
} if (delete_form != '') { %>
	<<%= model%>-delete id="<%= model%>_delete_dialog" on-close="reload"></<%= model%>-delete><%
}	for (i=0; i < keys.length; i++) {
		if (jsondata[keys[i]].model) {%>
	<<%= jsondata[keys[i]].model%>-select id="<%= jsondata[keys[i]].model%>_select_dialog" on-item_selected="set_select_field"></<%= jsondata[keys[i]].model%>-select><%
	} }
  if (crud == "crud6") {%>	
	<!--<div class="card_title">>%= lng("%s %s",lng("List"),lng("<%= title%>"))%<</div>--><%
  } else {%>
	<div class="card_title">List <%= title%></div><%
  } %>
<%= user_point.list_header %>
	<select id="filter" on-change="input_type"><% 
		for (i=0; i < keys.length; i++) { 
			if (jsondata[keys[i]].line_r) {
				if (!jsondata[keys[i]].model) {%>  <%= srv(crud, jsondata[keys[i]].description)%>
		<option value="<%= keys[i]%>"><%= srv(crud, jsondata[keys[i]].description)%></option><%
				} else {%>
		<option value="<%= keys[i]%>_<%= jsondata[keys[i]].display%>"><%= srv(crud, jsondata[keys[i]].description)%></option><%
		} } }%>
	</select>
	<select id="op">   
		<option value="$eq"><%= srv(crud, "Equal to")%></option>
		<option value="$ne"><%= srv(crud, "Different to")%></option>
		<option value="$contains"><%= srv(crud, "Contains")%></option>
		<option value="$gte"><%= srv(crud, "Greater or Equal to")%></option>
		<option value="$lte"><%= srv(crud, "Less or Equal to")%></option>
	</select>
	<input id="filtro" type="{{tipo}}" on-click="select_field">
	<select id="select" class="hide">
	  <template is="dom-repeat" items="{{opts}}">
		<option value="{{item.op}}">{{item.des}}</option>
	  </template>
	</select>
	<select id="logic" on-change="logic_operator">
		<option value="-">---</option>
		<option value="$and">And</option>
		<option value="$or">Or</option>
	</select>
	<paper-button class="btn" on-click="filter" raised><%= srv(crud, "Find")%></paper-button>
	<strong id="total">{{regs}}</strong>
	<div id="btn_area"><%
	  if (new_reg) {%>
		<paper-fab id="btn_add" mini on-click="new" icon="add"></paper-fab><%
	  }
	  if (download) {%>
		<paper-fab id="btn_down" mini on-click="download" icon="file-download"></paper-fab><%
	  }
	  if (print) {%>
		<paper-fab id="btn_print" mini on-click="print" icon="print"></paper-fab><% 
	  } %>
		<paper-fab id="btn_help" mini on-click="help" icon="help"></paper-fab>
		<!--<paper-fab id="btn_menu" mini on-click="menu" icon="list"></paper-fab>-->
	</div>
	<a href="{{download_data}}" id="link" class="hide" download="<%= title%>.xml">Download Data</a>
	<br>
	<select id="filter2" class="hide" on-change="input_type2"><% 
		for (i=0; i < keys.length; i++) { 
			if (jsondata[keys[i]].line_r) {
			   if (!jsondata[keys[i]].model) {%>
		<option value="<%= keys[i]%>"><%= srv(crud, jsondata[keys[i]].description)%></option><%
				} else {%>
		<option value="<%= keys[i]%>_<%= jsondata[keys[i]].display%>"><%= srv(crud, jsondata[keys[i]].description)%></option><% 
		} } }%>
	</select>
	<select id="op2" class="hide" >   
		<option value="$eq"><%= srv(crud, "Equal to")%></option>
		<option value="$ne"><%= srv(crud, "Different to")%></option>
		<option value="$contains"><%= srv(crud, "Contains")%></option>
		<option value="$gte"><%= srv(crud, "Greater or Equal to")%></option>
		<option value="$lte"><%= srv(crud, "Less or Equal to")%></option>
	</select>
	<input id="filtro2" class="hide" type="{{tipo2}}" on-click="select_field">
	<select id="select2" class="hide">
	  <template is="dom-repeat" items="{{opts2}}">
		<option value="{{item.op}}">{{item.des}}</option>
	  </template>
	</select>

	<paper-dialog id="menu_dialog"> 
		<paper-menu><%
		  if (display) { %>
			<paper-item on-click="display" style="min-height:20px;line-height:35px;"><%= srv(crud, "Display")%></paper-item><%
		  }
		  if (edit) {%>
			<paper-item on-click="edit" style="min-height:20px;line-height:35px;"><%= srv(crud, "Edit")%></paper-item><%
		  }
		  if (delete_reg) {%>
			<paper-item on-click="delete" style="min-height:20px;line-height:35px;"><%= srv(crud, "Delete")%></paper-item><%
		  }%>
<%= user_point.list_detail_menu %>
		</paper-menu>
	</paper-dialog>
	<table id="data_table" class="table_list" style="width:100%">
	<thead>
	  <tr>
		<th id="th_ops" class="ops"><paper-icon-button on-click="list_columns" icon="settings"></paper-icon-button></th><% 
		for (i=0; i < keys.length; i++) { 
			if (jsondata[keys[i]].line_r) {
				if (!jsondata[keys[i]].model) {%>
		<th class="col_<%= keys[i]%>" on-click="sort_by_field"><%= srv(crud, jsondata[keys[i]].description)%><div id="<%= keys[i]%>_sort_d" class="hide">
			<iron-icon id="<%= keys[i]%>_sort" icon="arrow-drop-up"></iron-icon></div></th><%
				} else {%>
		<th class="col_<%= keys[i]%>_<%= jsondata[keys[i]].display%>" on-click="sort_by_field"><%= srv(crud, jsondata[keys[i]].description)%><div id="<%= keys[i]%>_<%= jsondata[keys[i]].display%>_sort_d" class="hide">
			<iron-icon id="<%= keys[i]%>_<%= jsondata[keys[i]].display%>_sort" icon="arrow-drop-up"></iron-icon></div></th><%
		} } }%>
	  </tr>
	</thead>
	<!--<tfoot>
	<tr>
		<td class="ops"></td><%
	  for (i=0; i < keys.length; i++) { 
		 if (jsondata[keys[i]].line_r) { 
			if (!jsondata[keys[i]].model) {%>
		<td class="col_<%= keys[i]%>"></td><% 
			} else {%>
		<td class="col_<%= keys[i]%>_<%= jsondata[keys[i]].display%>"></td><%	
		} } }%>
	</tr>
	</tfoot>-->
	<tbody>
	<template id="template_items" is="dom-repeat" items="{{filtered_data}}">
	<tr>
		<td id="td_ops" class="ops">
			<paper-icon-button key="{{item.<%= key.name %>}}" on-click="item_menu_toggle" class="icon-op" icon="list"></paper-icon-button>
		</td><%
		for (i=0; i < keys.length; i++) { 
			if (jsondata[keys[i]].line_r) {
				if (!jsondata[keys[i]].model) {%>
		<template is="dom-if" if="{{column.<%= keys[i]%>}}"><td>{{<% 
			if (jsondata[keys[i]].type === "date") {%>date_dma(<%}%>item.<%= keys[i]%><%
			if (jsondata[keys[i]].enum) {%>_des<%}
			if (jsondata[keys[i]].type === "date") {%>)<%}%>}}</td></template><%
				} else {%>
		<template is="dom-if" if="{{column.<%= keys[i]%>_<%= jsondata[keys[i]].display%>}}"><td>{{item.<%= keys[i]%>_<%= jsondata[keys[i]].display%>}}</td></template><%
		} } }%>
	</tr>
	</template>
	</tbody>
</table>
</template>
<script>
Polymer({
	is: "<%= model%>-list",
	properties: {
		//cur_sort: { field: "id", isdesc: false },
		//cur_filter: {}
	},
	ready: function() {
<%= user_point.list_start_ready %>
		// For Sharepoint
		if (typeof String.prototype.startsWith != 'function') {
			// see below for better implementation!
			String.prototype.startsWith = function (str){
				return this.indexOf(str) === 0;
			}
		}
		this.$.ajax.url = config_server() + "<%= model%>"
		this.cur_sort = { field: "<%= key.name %>", isdesc: true }
		this.cur_filter = {}
		var _model = [<%= attrs%>		]
		this.enums = {}<% 
	   for (i=0; i< keys.length; i++) {
		if (jsondata[keys[i]].enum) {%>
		this.enums.<%= keys[i]%> = {<%
	   for (j=0; j< jsondata[keys[i]].enum.length; j++) {
	     %><%= jsondata[keys[i]].enum[j]%>:"<%= srv(crud, jsondata[keys[i]].enumdes[j])%>"<%
		   if (j == jsondata[keys[i]].enum.length-1){%>}<%}
		   if (j < jsondata[keys[i]].enum.length-1) {%>,<%}
		} } }%>
		//var _data = >%- data %<
		var db = new loki()
		this.data = db.addCollection("data_<%= model%>")
		this.model = db.addCollection("model_<%= model%>")
		this.reload()
		for (i=0; i< _model.length ; i++)
			this.model.insert(_model[i])
		_model = {}
		this.input_type()
		this.set_filter() //and columns & sort from localStorage
		var intro = introJs()
		intro.setOptions({
			doneLabel: '>%= lng('Exit')%<',
			steps: [
				{ element: '#btn_help',
				intro: 'Para Obtener Ayuda acerca de esta página, puede utilizar el boton de ayuda'}],
			showStepNumbers:false
		})
		/*document.addEventListener('DOMContentLoaded', function() {
			setTimeout(function(){
				intro.start()
			}, 600);	
		}, false);*/
<%= user_point.list_end_ready %>
	},
	help: function() {
<% if (ga) {%>		ga('send', 'event', '<%= model%>', '<%= model%>_help')<% }%>
		var intro = introJs()
		
		intro.setOptions({ 
			skipLabel: '>%= lng('Exit')%<', 
			nextLabel: '>%= lng('Next')%<', 
			prevLabel: '>%= lng('Previous')%<',
			doneLabel: '>%= lng('Exit')%<',
			showStepNumbers:false,
			steps: [
				{ element: '#filter',
				intro: 'Puede seleccionar cualquier campo como filtro de la lista'},
				{ element: '#op',
				intro: 'operación de comparación'},
				{ element: '#filtro',
				intro: 'valor de comparación'},
				{ element: '#logic',
				intro: 'Se puede agregar un segundo filtro'},<%
			if (new_reg) {%>
				{ element: '#btn_add',
				intro: 'Botón para crear nuevo registro'},<%
			}
			if (download) {%>
				{ element: '#btn_down',
				intro: 'Boton para descargar archivo de datos, el cual puede ser leido en Excel'},<%
			}
			if (print) {%>
				{ element: '#btn_print',
				intro: 'Botón de Impresión, se puede exportar a pdf'},<%
			}%>
				{element: '#data_table',
				intro: 'Lista de registros filtrados',
				position: 'top'},<%
			if (columns) {%>
				{element: '#th_ops',
				intro: 'Consigurar columnas a mostrar en lista de registros'},<%
			}%>
				{element: '#td_ops',
				intro: 'Opciones para:<br> - Visualizar Registro<br> - Editar Registro<br> - Borrar Registro'}
			]
		})
		intro.start()
	},<% 
 if (columns) { %>
	list_columns: function() {
<% if (ga) {%>		ga('send', 'event', '<%= model%>', '<%= model%>_list_columns')<% }%>
		this.$.<%= model%>_list_columns.open_list_columns(this.column)
	},<%
	} %>
	update_columns: function() {
		var columns = {}
		this.column = this.$.<%= model%>_list_columns.column
		for (i=0; i < this.model.data.length; i++ )
		{
			this.model.data[i].display = this.column[this.model.data[i].column]
			columns[this.model.data[i].column] = this.column[this.model.data[i].column]
		}
		localStorage["<%= model%>-list-columns"] = JSON.stringify(columns)
		this.show_columns()
		// reset filter
		this.$.filter.value = "<%= key.name%>"
		this.$.op.value = "$eq"
		this.$.filtro.value = ""
		this.$.logic.value = "-"
		this.logic_operator()
		this.filter()
	},
	show_columns: function() {
		var column = ''
		this.column = {}
		var el = []
		for (i=0; i < this.model.data.length; i++)
		{
			this.column[this.model.data[i].column] = this.model.data[i].display
			column = 'col_'+ this.model.data[i].column
			el = this.$.data_table.querySelectorAll('.'+column)
			for (j=0; j< el.length; j++)
				if (this.model.data[i].display)
					el[j].classList.remove("hide")
				else
					el[j].classList.add("hide")
		}
	},
	date_dma: function(datex) {
		return datex_dma(datex)
	},
	logic_operator: function() {
		if (this.$.logic.value == "-") {
			this.$.filter2.className = "hide"
			this.$.op2.className = "hide"
			this.$.filtro2.className = "hide"
			this.$.select2.className = "hide"
		} else
		{
			this.$.filter2.className = ""
			this.$.op2.className = ""
			this.input_type(2)
			//this.$.filtro2.className = ""
			//this.$.select2.className = ""
		}
	},
	select_field: function(e) {
		this.field = e.toElement.id
		var filter = ""
		switch (this.field) {
		  case "filtro":
			filter = "filter"
		  break;
		  case "filtro2":
			filter = "filter2"
		  break;
		}
		if (filter != "")
		{<% 
		for (i=0; i < keys.length; i++) {
			if (jsondata[keys[i]].model) {%>
		  if (this.$[filter].value == "<%= keys[i]%>_<%= jsondata[keys[i]].display%>"){
			this.$.<%= jsondata[keys[i]].model%>_select_dialog.style.top = e.toElement.offsetParent.offsetTop+"px"
			//this.$.<%= jsondata[keys[i]].model%>_select_dialog.style.left = "-100px"
			this.$.<%= jsondata[keys[i]].model%>_select_dialog.open_select_dialog()
		  }<%} }%>
		}
	},
	set_select_field: function(e) {
		this.$[this.field].value = this.$[e.srcElement.id].item.name
	},
	set_filter: function() {
		if (localStorage["<%= model%>-list-filter"])
		{
			var stored_filter = JSON.parse(localStorage["<%= model%>-list-filter"])
			this.$.filter.value = stored_filter.filter
			this.$.op.value = stored_filter.op
			this.input_type()
			var column = this.model.find({ "column": this.$.filter.value})
			if (column[0].enum)
				if (column[0].type != "number")
					this.$.select.value = stored_filter.value
				else
					this.$.select.value = Number(stored_filter.value)
			else
				if (column[0].type != "number")
					this.$.filtro.value = stored_filter.value
				else
					this.$.filtro.value = Number(stored_filter.value)
			if  (stored_filter.filter2)
			{
				this.$.logic.value = stored_filter.logic
				this.logic_operator()
				this.$.filter2.value = stored_filter.filter2
				this.$.op2.value = stored_filter.op2
				this.input_type(2)
				var column = this.model.find({ "column": this.$.filter2.value})
				if (column[0].enum)
					if (column[0].type != "number")
						this.$.select2.value = stored_filter.value2
					else
						this.$.select2.value = Number(stored_filter.value2)
				else
					if (column[0].type != "number")
						this.$.filtro2.value = stored_filter.value2
					else
						this.$.filtro2.value = Number(stored_filter.value2)
			}
			this.filter()
		}
		if (localStorage["<%= model%>-list-columns"])
		{
			var columns = JSON.parse(localStorage["<%= model%>-list-columns"])
			for (i=0; i < this.model.data.length; i++ )
			  this.model.data[i].display = columns[this.model.data[i].column]
		}
		this.show_columns()
	},
	filter: function() {
		var stored_filter = {}
 		var name = this.$.filter.value
<% if (ga) {%>		ga('send', 'event', '<%= model%>', '<%= model%>_filter_by_'+name)<% }%>
		stored_filter.filter = name
		var op = this.$.op.value
		stored_filter.op = op 
		var valor = {}
		this.cur_filter = {}
		if (this.$.filtro.getAttribute("class") != "hide")
			if (this.$.filtro.getAttribute("type") == "number") 
				valor[op] = Number(this.$.filtro.value)
		 	else 
				valor[op] = this.$.filtro.value
		else 
			valor[op] = this.$.select.value
		this.cur_filter[name] = valor
		stored_filter.value = valor[op]
		if (this.$.logic.value != "-")
		{
			name = this.$.filter2.value
			op = this.$.op2.value
			stored_filter.logic = this.$.logic.value
			stored_filter.filter2 = name
			stored_filter.op2 = op 
			valor = {}
			var logic_op = this.$.logic.value
			var filtro2 = {}
			if (this.$.filtro2.getAttribute("class") != "hide")
				if (this.$.filtro2.getAttribute("type") == "number") 
					valor[op] = Number(this.$.filtro2.value)
				else 
					valor[op] = this.$.filtro2.value
			else 
				valor[op] = this.$.select2.value
			stored_filter.value2 = valor[op]
			filtro2[name] = valor
			var filtro = this.cur_filter
			this.cur_filter = {}
			this.cur_filter[logic_op] = [filtro, filtro2]	
		}
		localStorage["<%= model%>-list-filter"] = JSON.stringify(stored_filter)
		this.result_set = this.data.chain().find(this.cur_filter).simplesort(this.cur_sort.field, this.cur_sort.isdesc)
		this.filtered_data = []
		this.filtered_data = this.result_set.data()
		this.regs = this.filtered_data.length + " reg"
	},
	hide_sort_icons: function() {<%
		for (i=0; i<keys.length; i++) {
		  if (jsondata[keys[i]].line_r) {
		    if (!jsondata[keys[i]].model) {%>
		this.$.<%= keys[i]%>_sort_d.classList.add("hide")<%
			} else {%>
		this.$.<%= keys[i]%>_<%= jsondata[keys[i]].display%>_sort_d.classList.add("hide")<%	
		} } }%>
	},
	sort_by_field: function(e) {
		var field = e.target.classList[0].replace('col_','')
<% if (ga) {%>		ga('send', 'event', '<%= model%>', '<%= model%>_sort_by_'+field)<% }%>
		this.hide_sort_icons()
		this.sort(field)
		if (this.cur_sort.isdesc)
			this.$[field+"_sort"].setAttribute("icon", "arrow-drop-down")
		  else
			this.$[field+"_sort"].setAttribute("icon", "arrow-drop-up")
		this.$[field+"_sort_d"].classList.remove("hide")	
	},
	sort: function(field) {
		if (this.cur_sort.field == field)
			this.cur_sort.isdesc = !this.cur_sort.isdesc
		 else
			this.cur_sort = { field: field, isdesc: false}
		this.result_set = this.data.chain().find(this.cur_filter).simplesort(this.cur_sort.field, this.cur_sort.isdesc)
		this.filtered_data = this.result_set.data()
	},
	input_type2: function() {
		this.input_type(2)
	},
	input_type: function(n) {
	if (n!= 2)
	{
		this.$.filtro.value = ""
		var column = this.model.find({ "column": this.$.filter.value})
	} 
	else
	{
		this.$.filtro2.value = ""
		var column = this.model.find({ "column": this.$.filter2.value})
	}
	if (column[0].type)
	{
		var tipo = ""
		switch(column[0].type) {
		case "string":
			tipo = "text"
		break;
		case "boolean":
			tipo = "boolean"
		break;
		case "integer":
			tipo = "number"
		break;
		case "float":
			tipo = "float"
		break;
		case "date":
			tipo = "date"
		break;
		default:
			tipo = "text"
		}
		if (n!= 2)
		{
			this.$.select.className = "hide"
			this.$.filtro.className = ""
			this.tipo = tipo
		} 
		else
		{
			this.$.select2.className = "hide"
			this.$.filtro2.className = ""
			this.tipo2 = tipo
		}	
	}
	else
	{
		if (n!= 2)
		{
			this.$.select.className = ""
			this.$.filtro.className = "hide"
			this.opts = []
			for (i=0; i< column[0].enum.length; i++)
				this.push("opts", {"op": column[0].enum[i], "des": column[0].enumdes[i]})
		}
		else
		{
			this.$.select2.className = ""
			this.$.filtro2.className = "hide"
			this.opts2 = []
			for (i=0; i< column[0].enum.length; i++)
				this.push("opts2", {"op": column[0].enum[i], "des": column[0].enumdes[i]})
		}
	}
	},
	menu: function() {
		
	},<%
  if (print) { %>
	print: function() {
<% if (ga) {%>		ga('send', 'event', '<%= model%>', '<%= model%>_print')<% }%>
		window.print()
	},<% 
  }
  if (download) { %>
	download: function() {
<% if (ga) {%>		ga('send', 'event', '<%= model%>', '<%= model%>_download')<% }%>
		var x2js = new X2JS();
		var datoi = this.data.data
		for (i=0; i<datoi.length; i++)
		{
			delete datoi[i].$loki
			delete datoi[i].meta
			delete datoi[i].createdAt
			delete datoi[i].updatedAt
		}
		var dato = { "data": datoi }
		var xml_data = x2js.json2xml_str(dato)
		xml_data = "<x>"+xml_data+"</x>"
		this.download_data = 'data:application/xml;charset=utf-8,'+xml_data
		this.$.link.click()		
	},<%
  } %>
	item_menu_toggle: function(e){
		this.key = Number(e.toElement.offsetParent.key)
		this.$.menu_dialog.style.top = e.toElement.offsetParent.offsetTop+20+"px"
		this.$.menu_dialog.style.left = "30px"
		this.$.menu_dialog.open()
	},<%
 if (display) {%>
  display: function(e) {
<% if (ga) {%>	ga('send', 'event', '<%= model%>', '<%= model%>_display')<% }%>
	this.$.menu_dialog.close()
	var filtro = {"<%= key.name %>": this.key}
	var item = this.data.find(filtro)[0]
	this.$.<%= model%>_display_dialog.open_display_dialog(item)
  },<%
 }
 if (edit) {%>
  edit: function(e) {
<% if (ga) {%>	ga('send', 'event', '<%= model%>', '<%= model%>_edit')<% }%>
	this.$.menu_dialog.close()
	var filtro = {"<%= key.name %>": this.key}
	var item = this.data.find(filtro)[0]
	this.$.<%= model%>_edit_dialog.open_dialog(item)
  },<%
 }
 if (delete_reg) {%>
  delete: function(e) {
<% if (ga) {%>	ga('send', 'event', '<%= model%>', '<%= model%>_delete')<% }%>
	this.$.menu_dialog.close()
	var filtro = {"<%= key.name %>": this.key}
	var item = this.data.find(filtro)[0]
	this.$.<%= model%>_delete_dialog.open_delete_dialog(item)
  },<%
 }
 if (new_reg) { %>
  new: function() {
<% if (ga) {%>	ga('send', 'event', '<%= model%>', '<%= model%>_new')<% }%>
	this.$.<%= model%>_new_dialog.open_dialog()
  },<%
 }%>
  reload: function() {
	this.$.ajax.generateRequest()
  },
  load_data: function() {
<% if (ga) {%>	ga('send', 'event', '<%= model%>', '<%= model%>_load_data')<% }%>
	while(this.data.data[0]) {
        this.data.remove(this.data.data[0])
      }
	for (i=0; i< this.$.ajax.lastResponse.length; i++)
	{<%	for (i=0; i < keys.length; i++) { 
			if (jsondata[keys[i]].type == "date") {%>
	  if (this.$.ajax.lastResponse[i].<%= keys[i]%>)
		this.$.ajax.lastResponse[i].<%= keys[i]%> = this.$.ajax.lastResponse[i].<%= keys[i]%>.substring(0,10)<% 
	} }
	for (i=0; i< keys.length; i++) {
	  if (jsondata[keys[i]].enum) {%>
		this.$.ajax.lastResponse[i].<%= keys[i]%>_des= this.enums.<%= keys[i]%>[this.$.ajax.lastResponse[i].<%= keys[i]%>]<%
	  } 
	  if (jsondata[keys[i]].model) {%>
		if (this.$.ajax.lastResponse[i].<%= keys[i]%>){
			this.$.ajax.lastResponse[i].<%= keys[i]%>_<%= jsondata[keys[i]].key%> = this.$.ajax.lastResponse[i].<%= keys[i]%>.<%= jsondata[keys[i]].key%>
			this.$.ajax.lastResponse[i].<%= keys[i]%>_<%= jsondata[keys[i]].display%> = this.$.ajax.lastResponse[i].<%= keys[i]%>.<%= jsondata[keys[i]].display%>
		} else
		{
			this.$.ajax.lastResponse[i].<%= keys[i]%>_<%= jsondata[keys[i]].key%> = 0
			this.$.ajax.lastResponse[i].<%= keys[i]%>_<%= jsondata[keys[i]].display%> = ""
		}<%
	} }%>	
		this.data.insert(this.$.ajax.lastResponse[i])
	}
	this.filter()
  },
  ajax_error: function() {
<% if (ga) {%>	ga('send', 'event', '<%= model%>', '<%= model%>_ajax_error')<% }%>
	console.log(this.$.ajax.lastError)
	alert("<%= srv(crud, "Error Processing Request: ")%>", this.$.ajax.lastError)
  }
<%= user_point.list_functions %>
});
</script>
</dom-module><%
	if (crud == "crud6") { %>
<top-bar>>%= lng("%s %s",lng("List"),lng("<%= title%>"))%<</top-bar><%
	} %>
<paper-material class="card" elevation="2">
	<<%= model%>-list id="<%= model%>_list"></<%= model%>-list>
</paper-material>
</body>
</html>
