<!-- list template: version 7.06 -->
 <% 
 function lng(word) {
	return __("word")
 }
 function lng(word1, word2, word3) {
	return __(word1, word2, word3)
 }
%>  
<html>
<head><meta charset="UTF-8">
	<title><%= lng("%s %s",lng("List"),lng("App"))%></title>
	<script src="/bower_components/webcomponentsjs/webcomponents.min.js"></script>
	<script src="/bower_components/intro.js/minified/intro.min.js"></script>
	<script src="/js2/lokijs/build/lokijs.min.js"></script>
	<script src="/js2/x2js-v1.1.5/xml2json.min.js"></script>
	<script src="/components/app-config/app-config.js"></script>
	<script src="/components/app-util/app-util.js"></script>
	<link rel="stylesheet" href="/styles/app.css">
	<link rel="stylesheet" href="/bower_components/intro.js/minified/introjs.min.css">
	<!-- polymer Components -->
	<link rel="import" href="/bower_components/paper-material/paper-material.html">
	<link rel="import" href="/bower_components/paper-input/paper-input.html">
	<link rel="import" href="/bower_components/paper-fab/paper-fab.html">
	<link rel="import" href="/bower_components/iron-icon/iron-icon.html">
	<link rel="import" href="/bower_components/iron-icons/iron-icons.html">
	<link rel="import" href="/bower_components/iron-dropdown/iron-dropdown.html">
	<link rel="import" href="/bower_components/paper-icon-button/paper-icon-button.html">
	<link rel="import" href="/bower_components/paper-button/paper-button.html">
	<link rel="import" href="/bower_components/paper-dialog/paper-dialog.html">
	<link rel="import" href="/bower_components/paper-menu/paper-menu.html">
	<link rel="import" href="/bower_components/paper-item/paper-item.html">
	<link rel="import" href="/bower_components/iron-ajax/iron-ajax.html">
	<!-- Forms imports -->
	<link rel="import" href="/bower_components/polymer/polymer.html">
	<link rel="import" href="/bower_components/paper-dialog/paper-dialog.html">
	<link rel="import" href="/bower_components/paper-dialog-scrollable/paper-dialog-scrollable.html">
	<link rel="import" href="/bower_components/neon-animation/animations/scale-up-animation.html">
	<link rel="import" href="/bower_components/neon-animation/animations/fade-out-animation.html">
<script>	
// Redirect to https
  <% if (process.env.HTTPS == 'true') { %>
  if (window.location.protocol != "https:" && window.location.href.indexOf('localhost') == -1)
	window.location.href = "https:" + window.location.href.substring(window.location.protocol.length);
  <% } %>
</script>
<style>
#btn_area {
	display: inline-block;
	margin-left: 30px;
}
#dialog {
	width: 33em;
}
.card {
	width: 64em;
	top: 13px;
	left: 15px;
}
th div {
	display: inline;
}
#menu_dialog {
	position: absolute;
	left: 45px;
}
paper-item {
	min-height: 20px;
	line-height: 35px;
}
paper-dialog {
	margin-top: 0px;
	margin-bottom: 0px;
}
paper-menu {
	margin-top: 0px;
	margin-bottom: 0px;
}
/** USER POINT - General Style **/
#name {
	width: 20em;
}
#description {
	width: 24em;
}
#path {
	width: 24em;
}
#repository {
	width: 20em;
}
#port {
	width: 4em;
}
#version {
	width: 6em;
}
/** END USER POINT - General Style **/
</style>

<!-- topBar template: version 1.25 -->

<dom-module id="top-bar">
<template>
<style>
	.topbar1 {
		position: fixed;
		top: 0;
		margin-top: 0;
		width: 100%;
		z-index: 1;
		//background-color: #039BE5;
		//background-color: #26A69A;
		background-color: #0097A7; //cyan 700
		color: white;
		//height: 40px;
		font-family: verdana, sans-serif;
	}
	.topBar {
		display: flex;
		justify-content: space-between;
		width: 94%;
		margin-top: 10px;
		margin-left:3%;
		z-index: 1;
		//background-color: #039BE5; blue
		//background-color: #26A69A; green
		background-color: #0097A7; 
		color: white;
		height: 30px;
	}
	.menubar {
		width: 100%;
		position: relative;
		top: 23px;
		z-index: 1;
		display: flex;
		//justify-content: space-between;
		justify-content: flex-start;
		background-color: #007080;
		height: 30px;
	}
	.menubar > div {
		color: white;
		margin-left: 20px;
		margin-top: 5px;
	}
	.menubar > div:first-of-type {
		margin-left: 120px;
	}
	.barTitle {
		margin-top: -3px;
		font-size: 20px;
	}
	.barItem {
		font-size: 15px;
	}
	.dropdown-content {
		margin-top: 30px;
		//margin-left: 0px,
		display: block;
		position: relative;
		background-color: #fff;
		color: black;
		box-shadow: 0px 2px 6px #ccc;
		padding: 10px;
		border-radius: 3px;
    }
	.dropdown-item {
		padding: 5px;
		color: rgb(100, 100, 100);
	}
	/*.dropdown-item:not(:last-of-type) {
		border-bottom: 1px solid #eee;
	}*/
	.top_border {
		border-top: 1px solid #eee;
	}
	.bar_icon {
		padding: 0;
		width: 24px;
		height: 24px;
	}
	.inline {
		display: inline;
	}
	#dropdown_user iron-icon {
		margin-right: 5px;
	}
	#dropdown_user {
		width: 120px;
	}
</style>
	<user-edit-profile id='user_edit_profile'></user-edit-profile>
	<div id="menubar" class="hide">
	  <div on-click="back"><%= lng('Back') %></div><%
	  groups = _.map(_.uniq(resources, 'Group'),function(n) { return n.Group })
	  _.forEach(groups , function(n, key) { 
		if (n != '') {%>
		<div on-click="open_<%= n %>_menu"><%= lng(n) %>
		  <iron-dropdown id="dropdown_<%= n %>"  horizontal-align="left"  vertical-align="top">
			<ul class="dropdown-content" tabindex="0"><%
			  var arr = _.map(_.filter(resources, {'Group': n}), function(n4) { return n4.name})
			  _.forEach(arr, function(n2, key2) { %>
				<li class="dropdown-item" on-click="<%= n2 %>"><iron-icon icon="chevron-right"></iron-icon><%= lng(n2.replace(/_/g,' ')) %></li><%
			  }) %>
			</ul>
		  </iron-dropdown>
		</div><%
	  } } ) %>
	</div>
	<div class="topbar1">
	  <div class="topBar">
		<div class="barItem" on-click="open_app_menu">
		  <paper-icon-button class="bar_icon" icon="menu"></paper-icon-button>
		  <div class="inline">Menu</div>
		</div>
		<div class="barTitle"><content></content></div>
		<div class="barItem" on-click="open_user_menu">
		  <paper-icon-button class="bar_icon" icon="account-circle"></paper-icon-button>
		  <div class="inline dropdown-trigger"><%= user.user%></div>
		  <iron-icon icon="arrow-drop-down"></iron-icon>
		  <iron-dropdown id="dropdown_user"  horizontal-align="right" vertical-align="top">
			<ul class="dropdown-content" tabindex="0">
			  <!--<li class="dropdown-item"><iron-icon icon="assessment"></iron-icon>Dashboard</li>
			  <hr>
			  <li class="dropdown-item"><iron-icon icon="drafts"></iron-icon>Messages</li>
			  <li class="dropdown-item"><iron-icon icon="settings"></iron-icon>Preferences</li>-->
<!-- USER POINT - User Menu -->
<!-- END USER POINT - User Menu -->
			  <hr>
			  <li class="dropdown-item" on-click="edit_profile"><iron-icon icon="perm-identity"></iron-icon><%= lng('Profile') %></li>
			  <li class="dropdown-item" on-click="signout"><iron-icon icon="exit-to-app"></iron-icon><%= lng('Log Out') %></li>
			</ul>
		  </iron-dropdown>
		</div>
	  </div>
	</div>
</template>
<script>
	Polymer({
		is: "top-bar",
		ready: function() {
			this.user = <%- JSON.stringify(user) %>
		},
		back: function() {
			window.history.back();
		},
		open_user_menu: function() {
			this.$.dropdown_user.toggle()
		},
		open_app_menu: function() {
			this.$.menubar.classList.toggle('hide')
			this.$.menubar.classList.toggle('menubar')
		},
		signout: function() {
			window.location.assign(config_server() + "signout")
		}<%
	_.forEach(groups, function(n, key) {
	  if(n != '') {%>
		,open_<%= n %>_menu: function() {
			this.$.dropdown_<%= n%>.toggle()
		}<%
	}})
	_.forEach(resources, function(n, key) { 
	  if (n.resource.type == "page") {%>
		,<%= n.name %>: function() {
			window.location.assign(config_server() + "<%= n.path.substring(1) %>")
		}<%
	}})%>
	,edit_profile: function() {
		this.user.usr = this.user.user
		this.$.user_edit_profile.open_dialog(this.user)
	}
	})
/** USER POINT - Top Bar Functions **/
/** END USER POINT - Top Bar Functions **/
</script>
</dom-module>

<!-- edit-form: version 5.21 -->

<dom-module id="User-edit-profile">
<template
	<style>
		#dialog_profile {
			width: 36em;
		}
	</style>
	<iron-ajax id="ajax" method="PUT" handle-as="json" on-response="record_updated" on-error="ajax_error"></iron-ajax>
	<paper-dialog id="dialog_profile" modal vertical layout entry-animation="scale-up-animation" 	exit-animation="fade-out-animation">
		<h2 class="card_title"><%= lng("%s %s",lng("Edit"),lng("User"))%></h2>
		<paper-dialog-scrollable>
		<form id="form" action="javascript:void(0);" on-submit="update">
			<table class="table_dialog" style="width:100%">
			<tr>
				<td><label class="left_label" for="usr"><%= lng('User')%></label></td>
				<td><input id="usr" type="text" name="usr" value="{{item.usr}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="name"><%= lng('Name')%></label></td>
				<td><input id="name" type="text" name="name" value="{{item.name}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="pwd_old"><%= lng('Current Password')%><strong class="red"> *</strong></label></td>
				<td><input id="pwd_old" type="password" name="pwd_old" value="{{item.pwd_old}}" required></td>
			</tr>
			<tr>
				<td><label class="left_label" for="pwd_1"><%= lng('New Password')%></label></td>
				<td><input id="pwd_1" type="password" name="pwd_1" value="{{item.pwd_1}}"></td>
			</tr>
			<tr>
				<td><label class="left_label" for="pwd_2"><%= lng('Confirm New Password')%></label></td>
				<td><input id="pwd_2" type="password" name="pwd_2" value="{{item.pwd_2}}"></td>
			</tr>
			<tr>
				<td><label class="left_label" for="email"><%= lng('email')%></label></td>
				<td><input id="email" type="text" name="email" value="{{item.email}}"></td>
			</tr>
			<tr>
				<td><label class="left_label" for="language"><%= lng('Language')%></label></td>
				<td><select id="language" name="language">
						<option value="en"><%= lng('English')%></option>
						<option value="es"><%= lng('EspaÃ±ol')%></option>
						<option value="pt"><%= lng('Portugues')%></option>
					</select></td>
			</tr>
			</table>
			<div class="buttons">
			  <input id="submit_update" class="hide" type="submit" value="CAMBIAR">
			  <div class="card_line">
				<paper-button id="update_btn" class="btn" on-click="submit_form" raised><%= lng('Change ')%></paper-button>
				<paper-button id="exit_btn" class="btn" dialog-confirm raised><%= lng('Exit')%></paper-button>
			  </div>
			</div>
		</form>
		</paper-dialog-scrollable>
	</paper-dialog>
</template>
<script>
	Polymer({
		is: "User-edit-profile",
		open_dialog: function(item) {
			this.item = item
			this.set_select_fields(item)
/** USER POINT - Open Edit Dialog **/
/** END USER POINT - Open Edit Dialog **/
			this.$.dialog_profile.open()
		},
		set_select_fields(item) {
			this.$.language.value = item.language
			},
		select_field_b: function(e) {
			this.$[e.toElement.getAttribute("field")].click()
		},
		set_select_field: function(e) {
			this.$[this.field].value = this.$[e.srcElement.id].item.name
			this.$[this.field].key = this.$[e.srcElement.id].item.key
		},
		submit_form: function() {
			if (this.$.pwd_1.value != this.$.pwd_2.value)
			{
				alert('New Password must be equal to Confirm Password')
				return 
			}
			if ((this.$.pwd_1.value != '') && (this.$.pwd_old.value == '')) 
			{
				alert('Old Password missing')
				return
			}
			this.$.submit_update.click()
		},
		update: function() {
			var record = {}
			//record.id = this.item.id
			record.pwd_old = this.$.pwd_old.value
			record.pwd_1 = this.$.pwd_1.value
			record.email = this.$.email.value
			record.language = this.$.language.value
			this.$.ajax.url = config_server() + "User/UpdProfile/"+this.item.id
			this.$.ajax.params = record
			this.$.ajax.generateRequest()
		},
		record_updated: function() {
			/** Validate Resource Authorized **/
			alert(this.$.ajax.lastResponse.auth_msg)
/** USER POINT - Record Updated **/
/** END USER POINT - Record Updated **/
			if (typeof this.$.ajax.lastResponse.err === 'undefined')
			{
				this.$.dialog_profile.close()
				this.fire('close')
			}
		},
		ajax_error: function() {
			console.log(this.$.ajax.lastError)
			alert("<%= lng('Error Processing Request: ')%>", this.$.ajax.lastError)
		}
/** USER POINT - Edit Functions **/
/** END USER POINT - Edit Functions **/
	})
</script>
</dom-module>

<!-- list-columns: version 5.11 -->

<dom-module id="App-list-columns">
<template>
<style>
	.green {
		background-color: green;
		color: white;
		height: 30px;
	}
	.orange {
		color: white;
		background-color: orange;
		height: 30px;
	}
	#dialog_columns {
		width: 27em;
	}
	#dialog_columns table div {
		width: 5.5em;
		text-align: center;
		padding-top: 5px;
		height: 28px;
	}
</style>
	<paper-dialog id="dialog_columns" modal vertical layout entry-animation="scale-up-animation" exit-animation="fade-out-animation">
		<h2 class="card_title"><%= lng("%s %s",lng("Columns"),lng("App"))%></h2>
			<paper-dialog-scrollable>
			<table class="table_dialog" style="width:100%">
			<tr>
				<td><label class="left_label" for="id"><%= lng('Id')%></label></td>
				<td><div id="id" on-click="change_field"></div></td>
			</tr>
			<tr>
				<td><label class="left_label" for="name"><%= lng('Name')%></label></td>
				<td><div id="name" on-click="change_field"></div></td>
			</tr>
			<tr>
				<td><label class="left_label" for="title"><%= lng('Title')%></label></td>
				<td><div id="title" on-click="change_field"></div></td>
			</tr>
			<tr>
				<td><label class="left_label" for="version"><%= lng('Version')%></label></td>
				<td><div id="version" on-click="change_field"></div></td>
			</tr>
			<tr>
				<td><label class="left_label" for="description"><%= lng('Description')%></label></td>
				<td><div id="description" on-click="change_field"></div></td>
			</tr>
			<tr>
				<td><label class="left_label" for="type"><%= lng('Type')%></label></td>
				<td><div id="type" on-click="change_field"></div></td>
			</tr>
			<tr>
				<td><label class="left_label" for="db"><%= lng('Database')%></label></td>
				<td><div id="db" on-click="change_field"></div></td>
			</tr>
			<tr>
				<td><label class="left_label" for="path"><%= lng('Path')%></label></td>
				<td><div id="path" on-click="change_field"></div></td>
			</tr>
			<tr>
				<td><label class="left_label" for="port"><%= lng('Port')%></label></td>
				<td><div id="port" on-click="change_field"></div></td>
			</tr>
			<tr>
				<td><label class="left_label" for="status"><%= lng('Status')%></label></td>
				<td><div id="status" on-click="change_field"></div></td>
			</tr>
			<tr>
				<td><label class="left_label" for="author"><%= lng('Author')%></label></td>
				<td><div id="author" on-click="change_field"></div></td>
			</tr>
			<tr>
				<td><label class="left_label" for="license"><%= lng('License')%></label></td>
				<td><div id="license" on-click="change_field"></div></td>
			</tr>
			<tr>
				<td><label class="left_label" for="repository"><%= lng('Repository')%></label></td>
				<td><div id="repository" on-click="change_field"></div></td>
			</tr>
			</table>
			</paper-dialog-scrollable>
		<div class="buttons">
			<div class="card_line">
				<paper-button id="update_btn" class="btn" on-click="submit_form" raised><%= lng('Change ')%></paper-button>
				<paper-button id="exit_btn" class="btn" dialog-confirm raised><%= lng('Exit')%></paper-button>
			</div>
		</div>
	</paper-dialog>
</template>
<script>
	Polymer({
		is: "App-list-columns",
		properties: {
			//updated: false,
			//column: {}
		},
		open_list_columns: function(column) {
			this.updated= false,
			this.column= column
			this.show_field("id")
			this.show_field("name")
			this.show_field("title")
			this.show_field("version")
			this.show_field("description")
			this.show_field("type")
			this.show_field("db")
			this.show_field("path")
			this.show_field("port")
			this.show_field("status")
			this.show_field("author")
			this.show_field("license")
			this.show_field("repository")
			this.$.dialog.open()
		},
		change_field: function(e) {
			var field = e.toElement.id
			this.column[field] = !this.column[field]
			this.show_field(field)
		},
		show_field: function(field) {
			if (this.column[field])
			{  
				this.$[field].innerHTML = "<%= lng('Show')%>"
				this.$[field].classList.remove("orange")
				this.$[field].classList.add("green")
			}
			else
			{
				this.$[field].innerHTML = "<%= lng('Hide')%>"
				this.$[field].classList.remove("green")
				this.$[field].classList.add("orange")
			}
		},
		submit_form: function() {
			this.updated = true
			this.$.dialog.close()
			this.fire('close')
		}
	})
</script>
</dom-module>

<!-- new-form: version 5.22 -->

<dom-module id="App-new">
<template>
	<iron-ajax id="ajax" handle-as="json" on-response="validate_record" on-error="ajax_error"></iron-ajax>
	<iron-ajax id="ajax2" method="POST" handle-as="json" on-response="record_created" on-error="ajax_error"></iron-ajax>
	<paper-dialog id="dialog" modal vertical layout entry-animation="scale-up-animation" exit-animation="fade-out-animation">
		<h2 class="card_title"><%= lng("%s %s",lng("Create"),lng("App"))%></h2>
		<paper-dialog-scrollable>
		  <form id="form" action="javascript:void(0);" on-submit="create">
			<table class="table_dialog" style="width:100%">
			<tr>
				<td><label class="left_label" for="id"><%= lng('Id')%></label></td>
				<td><input id="id" type="number" name="id" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="name"><%= lng('Name')%><strong class="red"> *</strong></label></td>
				<td><input id="name" type="text" name="name" on-keyup="valid_file_chars" required></td>
			</tr>
			<tr>
				<td><label class="left_label" for="title"><%= lng('Title')%><strong class="red"> *</strong></label></td>
				<td><input id="title" type="text" name="title" required></td>
			</tr>
			<tr>
				<td><label class="left_label" for="version"><%= lng('Version')%></label></td>
				<td><input id="version" type="text" name="version"></td>
			</tr>
			<tr>
				<td><label class="left_label" for="description"><%= lng('Description')%></label></td>
				<td><textarea id="description" name="description" rows="3" cols="42"></textarea></td>
			</tr>
			<tr>
				<td><label class="left_label" for="type"><%= lng('Type')%></label></td>
				<td><select id="type" name="type" disabled>
						<option value="web"><%= lng('Web App (Browser)')%></option>
						<option value="web2"><%= lng('Web App (electron)')%></option>
						<option value="desktop"><%= lng('Desktop')%></option>
						<option value="mobil"><%= lng('Mobil')%></option>
					</select></td>
			</tr>
			<tr>
				<td><label class="left_label" for="db"><%= lng('Database')%></label></td>
				<td><select id="db" name="db">
						<option value="postgres"><%= lng('PostgreSQL')%></option>
						<option value="mysql"><%= lng('MySQL')%></option>
						<option value="mongodb"><%= lng('MongoDB')%></option>
						<option value="redis"><%= lng('Redis')%></option>
						<option value="disk"><%= lng('Disk')%></option>
						<option value="orientdb"><%= lng('OrientDB')%></option>
						<option value="filemaker"><%= lng('FileMaker')%></option>
					</select></td>
			</tr>
			<tr>
				<td><label class="left_label" for="path"><%= lng('Path')%><strong class="red"> *</strong></label></td>
				<td><textarea id="path" name="path" rows="3" cols="42" on-click="select_path" readOnly required></textarea></td>
			</tr>
			<tr>
				<td><label class="left_label" for="port"><%= lng('Port')%><strong class="red"> *</strong></label></td>
				<td><input id="port" type="number" name="port" required></td>
			</tr>
			<tr>
				<td><label class="left_label" for="status"><%= lng('Status')%></label></td>
				<td><select id="status" name="status" disabled>
						<option value="started"><%= lng('Started')%></option>
						<option value="stopped" selected><%= lng('Stopped')%></option>
					</select></td>
			</tr>
			<tr>
				<td><label class="left_label" for="author"><%= lng('Author')%></label></td>
				<td><input id="author" type="text" name="author"></td>
			</tr>
			<tr>
				<td><label class="left_label" for="license"><%= lng('License')%></label></td>
				<td><input id="license" type="text" name="license"></td>
			</tr>
			<tr>
				<td><label class="left_label" for="repository"><%= lng('Repository')%></label></td>
				<td><input id="repository" type="text" name="repository"></td>
			</tr>
			</table>
			<div class="buttons">
				<input id="submit_btn" class="hide" type="submit" value="CREAR">
				<div class="card_line">
					<%= lng('Repeat ')%><input id="repeat" type="checkbox" name="repeat">
					<paper-button id="create_btn" class="btn" on-click="submit_form" raised><%= lng('Create')%></paper-button>
					<paper-button id="exit_btn" class="btn" dialog-confirm raised><%= lng('Exit')%></paper-button>
				</div>
			</div>
		  </form>
		</paper-dialog-scrollable>
	</paper-dialog>
</template>
<script>
	Polymer({
		is: "App-new",
		open_dialog: function() {
			this.clear()
/** USER POINT - Open New Dialog **/
			var path = __dirname
			var end = path.indexOf('Generador\\client')
			path = path.substring(0, end+16) + '\\apps'
			this.$.path.value = path
/** END USER POINT - Open New Dialog **/
			this.$.dialog.open()
		},
		clear: function() {
			this.$.id.value = ''
			this.$.name.value = ''
			this.$.title.value = ''
			this.$.version.value = ''
			this.$.description.value = ''
			this.$.path.value = ''
			this.$.port.value = ''
			this.$.author.value = ''
			this.$.license.value = ''
			this.$.repository.value = ''
		},
		select_field_b: function(e) {
			this.$[e.toElement.getAttribute("field")].click()
		},
		select_field: function(e) {
			this.field = e.toElement.id
		},
		set_select_field: function(e) {
			this.$[this.field].value = this.$[e.srcElement.id].item.name
			this.$[this.field].key = this.$[e.srcElement.id].item.key
		},
		create: function() {
			this.$.ajax2.url = config_server() + "App"
			var record = {}
			  record.name = this.$.name.value
			  record.title = this.$.title.value
			  record.version = this.$.version.value
			  record.description = this.$.description.value
			  record.type = this.$.type.value
			  record.db = this.$.db.value
			  record.path = this.$.path.value
			record.port = Number(this.$.port.value)
			  record.status = this.$.status.value
			  record.author = this.$.author.value
			  record.license = this.$.license.value
			  record.repository = this.$.repository.value			
			this.$.ajax2.params = record
			this.$.ajax2.generateRequest()
		},
		record_created: function() {
			/** Validate Resource Authorized **/
			if (this.$.ajax2.lastResponse.auth_msg)
			{
				alert(this.$.ajax2.lastResponse.auth_msg)
				return
			}
/** USER POINT - Record Created **/
			alert("Click OK for Creating the Application "+ this.$.name.value+". It Will take about 5 minutes...")
			this.create_app()
/** END USER POINT - Record Created **/
			// ask for create another one
			if (!this.$.repeat.checked) {
				this.$.dialog.close()
				this.fire('close')
			} else 
				this.clear()
		},
		submit_form: function() {
			if (!isNaN(this.$.id.value))
			{
				if (this.$.id.value > 0)
				{
					this.$.ajax.url = config_server() + "App/exist/"+this.$.id.value
					this.$.ajax.generateRequest()
				}
				else this.$.submit_btn.click()
			} else
				this.$.submit_btn.click()
		},
		validate_record: function() {
			if (this.$.ajax.lastResponse.exist) 
				alert("<%= lng('Record already Exist')%>")
			else
				this.$.submit_btn.click()
		},
		ajax_error: function() {
			console.log(this.$.ajax.lastError)
			alert("<%= lng('Error Processing Request: ')%>", this.$.ajax.lastError)
		}
/** USER POINT - New Functions **/
		,select_path: function() {
			const dialog = require('electron').remote.dialog;
			var path = dialog.showOpenDialog({ properties: [ 'openDirectory' ]})
			this.$.path.value = path[0]
		},
		create_app: function() {
			//const remote = require('electron').remote
			//var app_util = remote.require('./app_util.js')
			//console.log(app_util.npm_install())
	
			const ipcRenderer = require('electron').ipcRenderer;
			ipcRenderer.send('new-app', {app: this.$.name.value, port: this.$.port.value, path: this.$.path.value, app_des: this.$.description.value, ver: this.$.version.value, repo: this.$.repository.value, author: this.$.author.value, license: this.$.license.value, app_title: this.$.title.value});
		},
		valid_file_chars: function() {	
			this.$.name.value = drop_invalid_file_chars(this.$.name.value)
		}
/** END USER POINT - New Functions **/		
	})
</script>
</dom-module>

<!-- display-form: version 5.20 -->

<dom-module id="App-display">
<template>
	<paper-dialog id="dialog" modal vertical layout entry-animation="scale-up-animation" 	exit-animation="fade-out-animation">
		<h2 class="card_title"><%= lng("%s %s",lng("Display"),lng("App"))%></h2>
		  <paper-dialog-scrollable>
			<table class="table_dialog" style="width:100%">
			<tr>
				<td><label class="left_label" for="id"><%= lng('Id')%></label></td>
				<td><input id="id" type="number" name="id" value="{{item.id}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="name"><%= lng('Name')%></label></td>
				<td><input id="name" type="text" name="name" value="{{item.name}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="title"><%= lng('Title')%></label></td>
				<td><input id="title" type="text" name="title" value="{{item.title}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="version"><%= lng('Version')%></label></td>
				<td><input id="version" type="text" name="version" value="{{item.version}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="description"><%= lng('Description')%></label></td>
				<td><textarea id="description" name="description" rows="3" cols="42" value="{{item.description}}" disabled></textarea></td>
			</tr>
			<tr>
				<td><label class="left_label" for="type"><%= lng('Type')%></label></td>
				<td><select id="type" name="type" disabled>
						<option value="web"><%= lng('Web App (Browser)')%></option>
						<option value="web2"><%= lng('Web App (electron)')%></option>
						<option value="desktop"><%= lng('Desktop')%></option>
						<option value="mobil"><%= lng('Mobil')%></option>
					</select></td>
			</tr>
			<tr>
				<td><label class="left_label" for="db"><%= lng('Database')%></label></td>
				<td><select id="db" name="db" disabled>
						<option value="postgres"><%= lng('PostgreSQL')%></option>
						<option value="mysql"><%= lng('MySQL')%></option>
						<option value="mongodb"><%= lng('MongoDB')%></option>
						<option value="redis"><%= lng('Redis')%></option>
						<option value="disk"><%= lng('Disk')%></option>
						<option value="orientdb"><%= lng('OrientDB')%></option>
						<option value="filemaker"><%= lng('FileMaker')%></option>
					</select></td>
			</tr>
			<tr>
				<td><label class="left_label" for="path"><%= lng('Path')%></label></td>
				<td><textarea id="path" name="path" rows="3" cols="42" value="{{item.path}}" disabled></textarea></td>
			</tr>
			<tr>
				<td><label class="left_label" for="port"><%= lng('Port')%></label></td>
				<td><input id="port" type="number" name="port" value="{{item.port}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="status"><%= lng('Status')%></label></td>
				<td><select id="status" name="status" disabled>
						<option value="started"><%= lng('Started')%></option>
						<option value="stopped"><%= lng('Stopped')%></option>
					</select></td>
			</tr>
			<tr>
				<td><label class="left_label" for="author"><%= lng('Author')%></label></td>
				<td><input id="author" type="text" name="author" value="{{item.author}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="license"><%= lng('License')%></label></td>
				<td><input id="license" type="text" name="license" value="{{item.license}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="repository"><%= lng('Repository')%></label></td>
				<td><input id="repository" type="text" name="repository" value="{{item.repository}}" disabled></td>
			</tr>
			</table>
		  </paper-dialog-scrollable>
		<div class="buttons">
			<div class="card_line">
				<paper-button id="exit_btn" class="btn" dialog-confirm raised><%= lng('Exit')%></paper-button>
			</div>
		</div>
	</paper-dialog>
</template>
<script>
	Polymer({
		is: "App-display",
		open_display_dialog: function(item) {
			this.item = item
			this.set_select_fields(item)
/** USER POINT - Open Display Dialog **/
/** END USER POINT - Open Display Dialog **/
			this.$.dialog.open()
		},
		set_select_fields(item) {
			this.$.type.value = item.type
			this.$.db.value = item.db
			this.$.status.value = item.status
			}
/** USER POINT - Display Functions **/
/** END USER POINT - Display Functions **/
	})
</script>
</dom-module>

<!-- edit-form: version 5.21 -->

<dom-module id="App-edit">
<template>
	<iron-ajax id="ajax" method="PUT" handle-as="json" on-response="record_updated" on-error="ajax_error"></iron-ajax>
	<paper-dialog id="dialog" modal vertical layout entry-animation="scale-up-animation" 	exit-animation="fade-out-animation">
		<h2 class="card_title"><%= lng("%s %s",lng("Edit"),lng("App"))%></h2>
		<paper-dialog-scrollable>
		<form id="form" action="javascript:void(0);" on-submit="update">
			<table class="table_dialog" style="width:100%">
			<tr>
				<td><label class="left_label" for="id"><%= lng('Id')%></label></td>
				<td><input id="id" type="number" name="id" value="{{item.id}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="name"><%= lng('Name')%><strong class="red"> *</strong></label></td>
				<td><input id="name" type="text" name="name" value="{{item.name}}" disabled required></td>
			</tr>
			<tr>
				<td><label class="left_label" for="title"><%= lng('Title')%><strong class="red"> *</strong></label></td>
				<td><input id="title" type="text" name="title" value="{{item.title}}" required></td>
			</tr>
			<tr>
				<td><label class="left_label" for="version"><%= lng('Version')%></label></td>
				<td><input id="version" type="text" name="version" value="{{item.version}}"></td>
			</tr>
			<tr>
				<td><label class="left_label" for="description"><%= lng('Description')%></label></td>
				<td><textarea id="description" name="description" rows="3" cols="42" value="{{item.description}}"></textarea></td>
			</tr>
			<tr>
				<td><label class="left_label" for="type"><%= lng('Type')%></label></td>
				<td><select id="type" name="type" disabled>
						<option value="web"><%= lng('Web App (Browser)')%></option>
						<option value="web2"><%= lng('Web App (electron)')%></option>
						<option value="desktop"><%= lng('Desktop')%></option>
						<option value="mobil"><%= lng('Mobil')%></option>
					</select></td>
			</tr>
			<tr>
				<td><label class="left_label" for="db"><%= lng('Database')%></label></td>
				<td><select id="db" name="db">
						<option value="postgres"><%= lng('PostgreSQL')%></option>
						<option value="mysql"><%= lng('MySQL')%></option>
						<option value="mongodb"><%= lng('MongoDB')%></option>
						<option value="redis"><%= lng('Redis')%></option>
						<option value="disk"><%= lng('Disk')%></option>
						<option value="orientdb"><%= lng('OrientDB')%></option>
						<option value="filemaker"><%= lng('FileMaker')%></option>
					</select></td>
			</tr>
			<tr>
				<td><label class="left_label" for="path"><%= lng('Path')%><strong class="red"> *</strong></label></td>
				<td><textarea id="path" name="path" rows="3" cols="42" value="{{item.path}}" required></textarea></td>
			</tr>
			<tr>
				<td><label class="left_label" for="port"><%= lng('Port')%><strong class="red"> *</strong></label></td>
				<td><input id="port" type="number" name="port" value="{{item.port}}" required></td>
			</tr>
			<tr>
				<td><label class="left_label" for="status"><%= lng('Status')%></label></td>
				<td><select id="status" name="status">
						<option value="started"><%= lng('Started')%></option>
						<option value="stopped"><%= lng('Stopped')%></option>
					</select></td>
			</tr>
			<tr>
				<td><label class="left_label" for="author"><%= lng('Author')%></label></td>
				<td><input id="author" type="text" name="author" value="{{item.author}}"></td>
			</tr>
			<tr>
				<td><label class="left_label" for="license"><%= lng('License')%></label></td>
				<td><input id="license" type="text" name="license" value="{{item.license}}"></td>
			</tr>
			<tr>
				<td><label class="left_label" for="repository"><%= lng('Repository')%></label></td>
				<td><input id="repository" type="text" name="repository" value="{{item.repository}}"></td>
			</tr>
			</table>
			<div class="buttons">
			  <input id="submit_update" class="hide" type="submit" value="CAMBIAR">
			  <div class="card_line">
				<paper-button id="update_btn" class="btn" on-click="submit_form" raised><%= lng('Change ')%></paper-button>
				<paper-button id="exit_btn" class="btn" dialog-confirm raised><%= lng('Exit')%></paper-button>
			  </div>
			</div>
		</form>
		</paper-dialog-scrollable>
	</paper-dialog>
</template>
<script>
	Polymer({
		is: "App-edit",
		open_dialog: function(item) {
			this.item = item
			this.set_select_fields(item)
/** USER POINT - Open Edit Dialog **/
/** END USER POINT - Open Edit Dialog **/
			this.$.dialog.open()
		},
		set_select_fields(item) {
			this.$.type.value = item.type
			this.$.db.value = item.db
			this.$.status.value = item.status
			},
		select_field_b: function(e) {
			this.$[e.toElement.getAttribute("field")].click()
		},
		select_field: function(e) {
			this.field = e.toElement.id
		},
		set_select_field: function(e) {
			this.$[this.field].value = this.$[e.srcElement.id].item.name
			this.$[this.field].key = this.$[e.srcElement.id].item.key
		},
		submit_form: function() {
			this.$.submit_update.click()
		},
		update: function() {
			var record = {}
			record.id = Number(this.$.id.value)
			record.name = this.$.name.value
			record.title = this.$.title.value
			record.version = this.$.version.value
			record.description = this.$.description.value
			record.type = this.$.type.value
			record.db = this.$.db.value
			record.path = this.$.path.value
			record.port = Number(this.$.port.value)
			record.status = this.$.status.value
			record.author = this.$.author.value
			record.license = this.$.license.value
			record.repository = this.$.repository.value
			this.$.ajax.url = config_server() + "App/" +record.id
			this.$.ajax.params = record
			this.$.ajax.generateRequest()
		},
		record_updated: function() {
			/** Validate Resource Authorized **/
			if (this.$.ajax2.lastResponse.auth_msg)
			{
				alert(this.$.ajax2.lastResponse.auth_msg)
				return
			}
/** USER POINT - Record Updated **/
			const remote = require('electron').remote
			var app_util = remote.require('./app_util.js')
			app_util.set_port(this.$.name.value, this.$.port.value, this.$.path.value)
			app_util.set_package_json(this.$.name.value , this.$.path.value, this.$.description.value, this.$.version.value, this.$.repository.value, this.$.author.value, this.$.license.value)
			app_util.set_view_layout(this.$.name.value, this.$.title.value, this.$.path.value)
/** END USER POINT - Record Updated **/
			alert("<%= lng('Record Updated')%>")
			this.$.dialog.close()
			this.fire('close')
		},
		ajax_error: function() {
			console.log(this.$.ajax.lastError)
			alert("<%= lng('Error Processing Request: ')%>", this.$.ajax.lastError)
		}
/** USER POINT - Edit Functions **/
		,valid_file_chars: function() {	
			this.$.name.value = drop_invalid_file_chars(this.$.name.value)
		},
		load_path: function() {
			console.log('file: ', this.$.path.files)
		}
/** END USER POINT - Edit Functions **/
	})
</script>
</dom-module>

<!-- delete-form: version 5.21 -->

<dom-module id="App-delete">
<template>
	<iron-ajax id="ajax" method="GET" handle-as="json" on-response="record_deleted" on-error="ajax_error"></iron-ajax>
	<paper-dialog id="dialog" modal vertical layout entry-animation="scale-up-animation" exit-animation="fade-out-animation">
		<h2 class="card_title"><%= lng("%s %s",lng("Delete"),lng("App"))%></h2>
		<paper-dialog-scrollable>
		<form id="form" action="javascript:void(0);" on-submit="delete">
			<table class="table_dialog" style="width:100%">
			<tr>
				<td><label class="left_label" for="id"><%= lng('Id')%></label></td>
				<td><input id="id" type="number" name="id" value="{{item.id}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="name"><%= lng('Name')%></label></td>
				<td><input id="name" type="text" name="name" value="{{item.name}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="title"><%= lng('Title')%></label></td>
				<td><input id="title" type="text" name="title" value="{{item.title}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="version"><%= lng('Version')%></label></td>
				<td><input id="version" type="text" name="version" value="{{item.version}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="description"><%= lng('Description')%></label></td>
				<td><textarea id="description" name="description" rows="3" cols="42" value="{{item.description}}" disabled></textarea></td>
			</tr>
			<tr>
				<td><label class="left_label" for="type"><%= lng('Type')%></label></td>
				<td><select id="type" name="type" disabled>
						<option value="web"><%= lng('Web App (Browser)')%></option>
						<option value="web2"><%= lng('Web App (electron)')%></option>
						<option value="desktop"><%= lng('Desktop')%></option>
						<option value="mobil"><%= lng('Mobil')%></option>
					</select></td>
			</tr>
			<tr>
				<td><label class="left_label" for="db"><%= lng('Database')%></label></td>
				<td><select id="db" name="db" disabled>
						<option value="postgres"><%= lng('PostgreSQL')%></option>
						<option value="mysql"><%= lng('MySQL')%></option>
						<option value="mongodb"><%= lng('MongoDB')%></option>
						<option value="redis"><%= lng('Redis')%></option>
						<option value="disk"><%= lng('Disk')%></option>
						<option value="orientdb"><%= lng('OrientDB')%></option>
						<option value="filemaker"><%= lng('FileMaker')%></option>
					</select></td>
			</tr>
			<tr>
				<td><label class="left_label" for="path"><%= lng('Path')%></label></td>
				<td><textarea id="path" name="path" rows="3" cols="42" value="{{item.path}}" disabled></textarea></td>
			</tr>
			<tr>
				<td><label class="left_label" for="port"><%= lng('Port')%></label></td>
				<td><input id="port" type="number" name="port" value="{{item.port}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="status"><%= lng('Status')%></label></td>
				<td><select id="status" name="status" disabled>
						<option value="started"><%= lng('Started')%></option>
						<option value="stopped"><%= lng('Stopped')%></option>
					</select></td>
			</tr>
			<tr>
				<td><label class="left_label" for="author"><%= lng('Author')%></label></td>
				<td><input id="author" type="text" name="author" value="{{item.author}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="license"><%= lng('License')%></label></td>
				<td><input id="license" type="text" name="license" value="{{item.license}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="repository"><%= lng('Repository')%></label></td>
				<td><input id="repository" type="text" name="repository" value="{{item.repository}}" disabled></td>
			</tr>
			</table>
		<div class="buttons">
			<input id="submit_delete" class="hide" type="submit" value="BORRAR">
			<div class="card_line">
				<paper-button id="delete_btn" class="btn" on-click="form_submit" raised><%= lng('Delete')%></paper-button>
				<paper-button id="exit_btn" class="btn" dialog-confirm raised><%= lng('Exit')%></paper-button>
			</div>
		</div>
		</form>
		</paper-dialog-scrollable>
	</paper-dialog>
</template>
<script>
	Polymer({
		is: "App-delete",
		open_delete_dialog: function(item) {
			this.item = item
			this.set_select_fields(item)
/** USER POINT - Open Delete Dialog **/
/** END USER POINT - Open Delete Dialog **/
			this.$.dialog.open()
		},
		set_select_fields(item) {
			this.$.type.value = item.type
			this.$.db.value = item.db
			this.$.status.value = item.status
			},
		form_submit: function() {
			this.$.submit_delete.click()
		},
		delete: function() {
			this.$.ajax.url = config_server() + "App/deleteApp/"+this.item.id
			this.$.ajax.generateRequest()
		},
		record_deleted: function() {
			/** Validate Resource Authorized **/
			if (this.$.ajax2.lastResponse.auth_msg)
			{
				alert(this.$.ajax2.lastResponse.auth_msg)
				return
			}
/** USER POINT - Record Deleted **/
/** END USER POINT - Record Deleted **/
			alert("<%= lng('Record Deleted')%>")
			this.$.dialog.close()
			this.fire('close')
		},
		ajax_error: function() {
			console.log(this.$.ajax.lastError)
			alert("<%= lng('Error Processing Request: ')%>", this.$.ajax.lastError)
		}
/** USER POINT - Delete Functions **/
/** END USER POINT - Delete Functions **/
	})
</script>
</dom-module>



<dom-module id="App-list">
<template>
<!--USER POINT - List Style-->
	<iron-ajax id="ajax2" handle-as="json" on-response="app_updated" on-error="ajax_error"></iron-ajax>
<!--END USER POINT - List Style-->
	<iron-ajax id="ajax" handle-as="json" on-response="load_data" on-error="ajax_error"></iron-ajax>
	<App-list-columns id="App_list_columns" on-close="update_columns"></App-list-columns>
	<App-new id="App_new_dialog" on-close="reload"></App-new>
	<App-display id="App_display_dialog"></App-display>
	<App-edit id="App_edit_dialog" on-close="reload"></App-edit>
	<App-delete id="App_delete_dialog" on-close="reload"></App-delete>	
	<!--<div class="card_title"><%= lng("%s %s",lng("List"),lng("App"))%></div>-->
<!--USER POINT - List Header-->
<!--END USER POINT - List Header-->
	<select id="filter" on-change="input_type">  <%= lng('Id')%>
		<option value="id"><%= lng('Id')%></option>  <%= lng('Name')%>
		<option value="name"><%= lng('Name')%></option>  <%= lng('Title')%>
		<option value="title"><%= lng('Title')%></option>  <%= lng('Version')%>
		<option value="version"><%= lng('Version')%></option>  <%= lng('Description')%>
		<option value="description"><%= lng('Description')%></option>  <%= lng('Type')%>
		<option value="type"><%= lng('Type')%></option>  <%= lng('Database')%>
		<option value="db"><%= lng('Database')%></option>  <%= lng('Path')%>
		<option value="path"><%= lng('Path')%></option>  <%= lng('Port')%>
		<option value="port"><%= lng('Port')%></option>  <%= lng('Status')%>
		<option value="status"><%= lng('Status')%></option>  <%= lng('Author')%>
		<option value="author"><%= lng('Author')%></option>  <%= lng('License')%>
		<option value="license"><%= lng('License')%></option>  <%= lng('Repository')%>
		<option value="repository"><%= lng('Repository')%></option>
	</select>
	<select id="op">   
		<option value="$eq"><%= lng('Equal to')%></option>
		<option value="$ne"><%= lng('Different to')%></option>
		<option value="$contains"><%= lng('Contains')%></option>
		<option value="$gte"><%= lng('Greater or Equal to')%></option>
		<option value="$lte"><%= lng('Less or Equal to')%></option>
	</select>
	<input id="filtro" type="{{tipo}}" on-click="select_field">
	<select id="select" class="hide">
	  <template is="dom-repeat" items="{{opts}}">
		<option value="{{item.op}}">{{item.des}}</option>
	  </template>
	</select>
	<select id="logic" on-change="logic_operator">
		<option value="-">---</option>
		<option value="$and">And</option>
		<option value="$or">Or</option>
	</select>
	<paper-button class="btn" on-click="filter" raised><%= lng('Find')%></paper-button>
	<strong id="total">{{regs}}</strong>
	<div id="btn_area">
		<paper-fab id="btn_add" mini on-click="new" icon="add"></paper-fab>
		<paper-fab id="btn_down" mini on-click="download" icon="file-download"></paper-fab>
		<paper-fab id="btn_print" mini on-click="print" icon="print"></paper-fab>
		<paper-fab id="btn_help" mini on-click="help" icon="help"></paper-fab>
		<!--<paper-fab id="btn_menu" mini on-click="menu" icon="list"></paper-fab>-->
	</div>
	<a href="{{download_data}}" id="link" class="hide" download="App.xml">Download Data</a>
	<br>
	<select id="filter2" class="hide" on-change="input_type2">
		<option value="id"><%= lng('Id')%></option>
		<option value="name"><%= lng('Name')%></option>
		<option value="title"><%= lng('Title')%></option>
		<option value="version"><%= lng('Version')%></option>
		<option value="description"><%= lng('Description')%></option>
		<option value="type"><%= lng('Type')%></option>
		<option value="db"><%= lng('Database')%></option>
		<option value="path"><%= lng('Path')%></option>
		<option value="port"><%= lng('Port')%></option>
		<option value="status"><%= lng('Status')%></option>
		<option value="author"><%= lng('Author')%></option>
		<option value="license"><%= lng('License')%></option>
		<option value="repository"><%= lng('Repository')%></option>
	</select>
	<select id="op2" class="hide" >   
		<option value="$eq"><%= lng('Equal to')%></option>
		<option value="$ne"><%= lng('Different to')%></option>
		<option value="$contains"><%= lng('Contains')%></option>
		<option value="$gte"><%= lng('Greater or Equal to')%></option>
		<option value="$lte"><%= lng('Less or Equal to')%></option>
	</select>
	<input id="filtro2" class="hide" type="{{tipo2}}" on-click="select_field">
	<select id="select2" class="hide">
	  <template is="dom-repeat" items="{{opts2}}">
		<option value="{{item.op}}">{{item.des}}</option>
	  </template>
	</select>

	<paper-dialog id="menu_dialog"> 
		<paper-menu>
			<paper-item on-click="display" style="min-height:20px;line-height:35px;"><%= lng('Display')%></paper-item>
			<paper-item on-click="edit" style="min-height:20px;line-height:35px;"><%= lng('Edit')%></paper-item>
			<paper-item on-click="delete" style="min-height:20px;line-height:35px;"><%= lng('Delete')%></paper-item>
<!--USER POINT - List Detail Menu-->
			<paper-item on-click="models" style="min-height:20px;line-height:35px;"><%= lng('Models')%></paper-item>
			<paper-item on-click="start" style="min-height:20px;line-height:35px;"><%= lng('Start App')%></paper-item>
			<paper-item on-click="stop" style="min-height:20px;line-height:35px;"><%= lng('Stop App')%></paper-item>
<!--END USER POINT - List Detail Menu-->
		</paper-menu>
	</paper-dialog>
	<table id="data_table" class="table_list" style="width:100%">
	<thead>
	  <tr>
		<th id="th_ops" class="ops"><paper-icon-button on-click="list_columns" icon="settings"></paper-icon-button></th>
		<th class="col_id" on-click="sort_by_field"><%= lng('Id')%><div id="id_sort_d" class="hide">
			<iron-icon id="id_sort" icon="arrow-drop-up"></iron-icon></div></th>
		<th class="col_name" on-click="sort_by_field"><%= lng('Name')%><div id="name_sort_d" class="hide">
			<iron-icon id="name_sort" icon="arrow-drop-up"></iron-icon></div></th>
		<th class="col_title" on-click="sort_by_field"><%= lng('Title')%><div id="title_sort_d" class="hide">
			<iron-icon id="title_sort" icon="arrow-drop-up"></iron-icon></div></th>
		<th class="col_version" on-click="sort_by_field"><%= lng('Version')%><div id="version_sort_d" class="hide">
			<iron-icon id="version_sort" icon="arrow-drop-up"></iron-icon></div></th>
		<th class="col_description" on-click="sort_by_field"><%= lng('Description')%><div id="description_sort_d" class="hide">
			<iron-icon id="description_sort" icon="arrow-drop-up"></iron-icon></div></th>
		<th class="col_type" on-click="sort_by_field"><%= lng('Type')%><div id="type_sort_d" class="hide">
			<iron-icon id="type_sort" icon="arrow-drop-up"></iron-icon></div></th>
		<th class="col_db" on-click="sort_by_field"><%= lng('Database')%><div id="db_sort_d" class="hide">
			<iron-icon id="db_sort" icon="arrow-drop-up"></iron-icon></div></th>
		<th class="col_path" on-click="sort_by_field"><%= lng('Path')%><div id="path_sort_d" class="hide">
			<iron-icon id="path_sort" icon="arrow-drop-up"></iron-icon></div></th>
		<th class="col_port" on-click="sort_by_field"><%= lng('Port')%><div id="port_sort_d" class="hide">
			<iron-icon id="port_sort" icon="arrow-drop-up"></iron-icon></div></th>
		<th class="col_status" on-click="sort_by_field"><%= lng('Status')%><div id="status_sort_d" class="hide">
			<iron-icon id="status_sort" icon="arrow-drop-up"></iron-icon></div></th>
		<th class="col_author" on-click="sort_by_field"><%= lng('Author')%><div id="author_sort_d" class="hide">
			<iron-icon id="author_sort" icon="arrow-drop-up"></iron-icon></div></th>
		<th class="col_license" on-click="sort_by_field"><%= lng('License')%><div id="license_sort_d" class="hide">
			<iron-icon id="license_sort" icon="arrow-drop-up"></iron-icon></div></th>
		<th class="col_repository" on-click="sort_by_field"><%= lng('Repository')%><div id="repository_sort_d" class="hide">
			<iron-icon id="repository_sort" icon="arrow-drop-up"></iron-icon></div></th>
	  </tr>
	</thead>
	<!--<tfoot>
	<tr>
		<td class="ops"></td>
		<td class="col_id"></td>
		<td class="col_name"></td>
		<td class="col_title"></td>
		<td class="col_version"></td>
		<td class="col_description"></td>
		<td class="col_type"></td>
		<td class="col_db"></td>
		<td class="col_path"></td>
		<td class="col_port"></td>
		<td class="col_status"></td>
		<td class="col_author"></td>
		<td class="col_license"></td>
		<td class="col_repository"></td>
	</tr>
	</tfoot>-->
	<tbody>
	<template id="template_items" is="dom-repeat" items="{{filtered_data}}">
	<tr>
		<td id="td_ops" class="ops">
			<paper-icon-button key="{{item.id}}" on-click="item_menu_toggle" class="icon-op" icon="list"></paper-icon-button>
		</td>
		<template is="dom-if" if="{{column.id}}"><td>{{item.id}}</td></template>
		<template is="dom-if" if="{{column.name}}"><td>{{item.name}}</td></template>
		<template is="dom-if" if="{{column.title}}"><td>{{item.title}}</td></template>
		<template is="dom-if" if="{{column.version}}"><td>{{item.version}}</td></template>
		<template is="dom-if" if="{{column.description}}"><td>{{item.description}}</td></template>
		<template is="dom-if" if="{{column.type}}"><td>{{item.type_des}}</td></template>
		<template is="dom-if" if="{{column.db}}"><td>{{item.db_des}}</td></template>
		<template is="dom-if" if="{{column.path}}"><td>{{item.path}}</td></template>
		<template is="dom-if" if="{{column.port}}"><td>{{item.port}}</td></template>
		<template is="dom-if" if="{{column.status}}"><td>{{item.status_des}}</td></template>
		<template is="dom-if" if="{{column.author}}"><td>{{item.author}}</td></template>
		<template is="dom-if" if="{{column.license}}"><td>{{item.license}}</td></template>
		<template is="dom-if" if="{{column.repository}}"><td>{{item.repository}}</td></template>
	</tr>
	</template>
	</tbody>
</table>
</template>
<script>
Polymer({
	is: "App-list",
	properties: {
		//cur_sort: { field: "id", isdesc: false },
		//cur_filter: {}
	},
	ready: function() {
//USER POINT - List Start Ready
//END USER POINT - List Start Ready
		// For Sharepoint
		if (typeof String.prototype.startsWith != 'function') {
			// see below for better implementation!
			String.prototype.startsWith = function (str){
				return this.indexOf(str) === 0;
			}
		}
		this.$.ajax.url = config_server() + "App"
		this.cur_sort = { field: "id", isdesc: true }
		this.cur_filter = {}
		var _model = [{column: "id", type: "integer", display: false},
				{column: "name", type: "string", display: true},
				{column: "title", type: "string", display: false},
				{column: "version", type: "string", display: true},
				{column: "description", type: "string", display: false},
				{column: "type", enum: ["web","web2","desktop","mobil"], enumdes: ["<%= lng("Web App (Browser)")%>","<%= lng("Web App (electron)")%>","<%= lng("Desktop")%>","<%= lng("Mobil")%>"], display: true},
				{column: "db", enum: ["postgres","mysql","mongodb","redis","disk","orientdb","filemaker"], enumdes: ["<%= lng("PostgreSQL")%>","<%= lng("MySQL")%>","<%= lng("MongoDB")%>","<%= lng("Redis")%>","<%= lng("Disk")%>","<%= lng("OrientDB")%>","<%= lng("FileMaker")%>"], display: true},
				{column: "path", type: "string", display: false},
				{column: "port", type: "integer", display: true},
				{column: "status", enum: ["started","stopped"], enumdes: ["<%= lng("Started")%>","<%= lng("Stopped")%>"], display: true},
				{column: "author", type: "string", display: false},
				{column: "license", type: "string", display: false},
				{column: "repository", type: "string", display: false}
		]
		this.enums = {}
		this.enums.type = {web:"<%= lng('Web App (Browser)')%>",web2:"<%= lng('Web App (electron)')%>",desktop:"<%= lng('Desktop')%>",mobil:"<%= lng('Mobil')%>"}
		this.enums.db = {postgres:"<%= lng('PostgreSQL')%>",mysql:"<%= lng('MySQL')%>",mongodb:"<%= lng('MongoDB')%>",redis:"<%= lng('Redis')%>",disk:"<%= lng('Disk')%>",orientdb:"<%= lng('OrientDB')%>",filemaker:"<%= lng('FileMaker')%>"}
		this.enums.status = {started:"<%= lng('Started')%>",stopped:"<%= lng('Stopped')%>"}
		//var _data = <%- data %>
		var db = new loki()
		this.data = db.addCollection("data_App")
		this.model = db.addCollection("model_App")
		this.reload()
		for (i=0; i< _model.length ; i++)
			this.model.insert(_model[i])
		_model = {}
		this.input_type()
		this.set_filter() //and columns & sort from localStorage
		var intro = introJs()
		intro.setOptions({
			doneLabel: '<%= lng('Exit')%>',
			steps: [
				{ element: '#btn_help',
				intro: 'Para Obtener Ayuda acerca de esta pÃ¡gina, puede utilizar el boton de ayuda'}],
			showStepNumbers:false
		})
		/*document.addEventListener('DOMContentLoaded', function() {
			setTimeout(function(){
				intro.start()
			}, 600);	
		}, false);*/
//USER POINT - List End Ready
		first_time = true
//END USER POINT - List End Ready
	},
	help: function() {

		var intro = introJs()
		
		intro.setOptions({ 
			skipLabel: '<%= lng('Exit')%>', 
			nextLabel: '<%= lng('Next')%>', 
			prevLabel: '<%= lng('Previous')%>',
			doneLabel: '<%= lng('Exit')%>',
			showStepNumbers:false,
			steps: [
				{ element: '#filter',
				intro: 'Puede seleccionar cualquier campo como filtro de la lista'},
				{ element: '#op',
				intro: 'operaciÃ³n de comparaciÃ³n'},
				{ element: '#filtro',
				intro: 'valor de comparaciÃ³n'},
				{ element: '#logic',
				intro: 'Se puede agregar un segundo filtro'},
				{ element: '#btn_add',
				intro: 'BotÃ³n para crear nuevo registro'},
				{ element: '#btn_down',
				intro: 'Boton para descargar archivo de datos, el cual puede ser leido en Excel'},
				{ element: '#btn_print',
				intro: 'BotÃ³n de ImpresiÃ³n, se puede exportar a pdf'},
				{element: '#data_table',
				intro: 'Lista de registros filtrados',
				position: 'top'},
				{element: '#th_ops',
				intro: 'Consigurar columnas a mostrar en lista de registros'},
				{element: '#td_ops',
				intro: 'Opciones para:<br> - Visualizar Registro<br> - Editar Registro<br> - Borrar Registro'}
			]
		})
		intro.start()
	},
	list_columns: function() {

		this.$.App_list_columns.open_list_columns(this.column)
	},
	update_columns: function() {
		var columns = {}
		this.column = this.$.App_list_columns.column
		for (i=0; i < this.model.data.length; i++ )
		{
			this.model.data[i].display = this.column[this.model.data[i].column]
			columns[this.model.data[i].column] = this.column[this.model.data[i].column]
		}
		localStorage["App-list-columns"] = JSON.stringify(columns)
		this.show_columns()
		// reset filter
		this.$.filter.value = "id"
		this.$.op.value = "$eq"
		this.$.filtro.value = ""
		this.$.logic.value = "-"
		this.logic_operator()
		this.filter()
	},
	show_columns: function() {
		var column = ''
		this.column = {}
		var el = []
		for (i=0; i < this.model.data.length; i++)
		{
			this.column[this.model.data[i].column] = this.model.data[i].display
			column = 'col_'+ this.model.data[i].column
			el = this.$.data_table.querySelectorAll('.'+column)
			for (j=0; j< el.length; j++)
				if (this.model.data[i].display)
					el[j].classList.remove("hide")
				else
					el[j].classList.add("hide")
		}
	},
	date_dma: function(datex) {
		return datex_dma(datex)
	},
	logic_operator: function() {
		if (this.$.logic.value == "-") {
			this.$.filter2.className = "hide"
			this.$.op2.className = "hide"
			this.$.filtro2.className = "hide"
			this.$.select2.className = "hide"
		} else
		{
			this.$.filter2.className = ""
			this.$.op2.className = ""
			this.input_type(2)
			//this.$.filtro2.className = ""
			//this.$.select2.className = ""
		}
	},
	select_field: function(e) {
		this.field = e.toElement.id
		var filter = ""
		switch (this.field) {
		  case "filtro":
			filter = "filter"
		  break;
		  case "filtro2":
			filter = "filter2"
		  break;
		}
		if (filter != "")
		{
		}
	},
	set_select_field: function(e) {
		this.$[this.field].value = this.$[e.srcElement.id].item.name
	},
	set_filter: function() {
		if (localStorage["App-list-filter"])
		{
			var stored_filter = JSON.parse(localStorage["App-list-filter"])
			this.$.filter.value = stored_filter.filter
			this.$.op.value = stored_filter.op
			this.input_type()
			var column = this.model.find({ "column": this.$.filter.value})
			if (column[0].enum)
				if (column[0].type != "number")
					this.$.select.value = stored_filter.value
				else
					this.$.select.value = Number(stored_filter.value)
			else
				if (column[0].type != "number")
					this.$.filtro.value = stored_filter.value
				else
					this.$.filtro.value = Number(stored_filter.value)
			if  (stored_filter.filter2)
			{
				this.$.logic.value = stored_filter.logic
				this.logic_operator()
				this.$.filter2.value = stored_filter.filter2
				this.$.op2.value = stored_filter.op2
				this.input_type(2)
				var column = this.model.find({ "column": this.$.filter2.value})
				if (column[0].enum)
					if (column[0].type != "number")
						this.$.select2.value = stored_filter.value2
					else
						this.$.select2.value = Number(stored_filter.value2)
				else
					if (column[0].type != "number")
						this.$.filtro2.value = stored_filter.value2
					else
						this.$.filtro2.value = Number(stored_filter.value2)
			}
			this.filter()
		}
		if (localStorage["App-list-columns"])
		{
			var columns = JSON.parse(localStorage["App-list-columns"])
			for (i=0; i < this.model.data.length; i++ )
			  this.model.data[i].display = columns[this.model.data[i].column]
		}
		this.show_columns()
	},
	filter: function() {
		var stored_filter = {}
 		var name = this.$.filter.value

		stored_filter.filter = name
		var op = this.$.op.value
		stored_filter.op = op 
		var valor = {}
		this.cur_filter = {}
		if (this.$.filtro.getAttribute("class") != "hide")
			if (this.$.filtro.getAttribute("type") == "number") 
				valor[op] = Number(this.$.filtro.value)
		 	else 
				valor[op] = this.$.filtro.value
		else 
			valor[op] = this.$.select.value
		this.cur_filter[name] = valor
		stored_filter.value = valor[op]
		if (this.$.logic.value != "-")
		{
			name = this.$.filter2.value
			op = this.$.op2.value
			stored_filter.logic = this.$.logic.value
			stored_filter.filter2 = name
			stored_filter.op2 = op 
			valor = {}
			var logic_op = this.$.logic.value
			var filtro2 = {}
			if (this.$.filtro2.getAttribute("class") != "hide")
				if (this.$.filtro2.getAttribute("type") == "number") 
					valor[op] = Number(this.$.filtro2.value)
				else 
					valor[op] = this.$.filtro2.value
			else 
				valor[op] = this.$.select2.value
			stored_filter.value2 = valor[op]
			filtro2[name] = valor
			var filtro = this.cur_filter
			this.cur_filter = {}
			this.cur_filter[logic_op] = [filtro, filtro2]	
		}
		localStorage["App-list-filter"] = JSON.stringify(stored_filter)
		this.result_set = this.data.chain().find(this.cur_filter).simplesort(this.cur_sort.field, this.cur_sort.isdesc)
		this.filtered_data = []
		this.filtered_data = this.result_set.data()
		this.regs = this.filtered_data.length + " reg"
	},
	hide_sort_icons: function() {
		this.$.id_sort_d.classList.add("hide")
		this.$.name_sort_d.classList.add("hide")
		this.$.title_sort_d.classList.add("hide")
		this.$.version_sort_d.classList.add("hide")
		this.$.description_sort_d.classList.add("hide")
		this.$.type_sort_d.classList.add("hide")
		this.$.db_sort_d.classList.add("hide")
		this.$.path_sort_d.classList.add("hide")
		this.$.port_sort_d.classList.add("hide")
		this.$.status_sort_d.classList.add("hide")
		this.$.author_sort_d.classList.add("hide")
		this.$.license_sort_d.classList.add("hide")
		this.$.repository_sort_d.classList.add("hide")
	},
	sort_by_field: function(e) {
		var field = e.target.classList[0].replace('col_','')

		this.hide_sort_icons()
		this.sort(field)
		if (this.cur_sort.isdesc)
			this.$[field+"_sort"].setAttribute("icon", "arrow-drop-down")
		  else
			this.$[field+"_sort"].setAttribute("icon", "arrow-drop-up")
		this.$[field+"_sort_d"].classList.remove("hide")	
	},
	sort: function(field) {
		if (this.cur_sort.field == field)
			this.cur_sort.isdesc = !this.cur_sort.isdesc
		 else
			this.cur_sort = { field: field, isdesc: false}
		this.result_set = this.data.chain().find(this.cur_filter).simplesort(this.cur_sort.field, this.cur_sort.isdesc)
		this.filtered_data = this.result_set.data()
	},
	input_type2: function() {
		this.input_type(2)
	},
	input_type: function(n) {
	if (n!= 2)
	{
		this.$.filtro.value = ""
		var column = this.model.find({ "column": this.$.filter.value})
	} 
	else
	{
		this.$.filtro2.value = ""
		var column = this.model.find({ "column": this.$.filter2.value})
	}
	if (column[0].type)
	{
		var tipo = ""
		switch(column[0].type) {
		case "string":
			tipo = "text"
		break;
		case "boolean":
			tipo = "boolean"
		break;
		case "integer":
			tipo = "number"
		break;
		case "float":
			tipo = "float"
		break;
		case "date":
			tipo = "date"
		break;
		default:
			tipo = "text"
		}
		if (n!= 2)
		{
			this.$.select.className = "hide"
			this.$.filtro.className = ""
			this.tipo = tipo
		} 
		else
		{
			this.$.select2.className = "hide"
			this.$.filtro2.className = ""
			this.tipo2 = tipo
		}	
	}
	else
	{
		if (n!= 2)
		{
			this.$.select.className = ""
			this.$.filtro.className = "hide"
			this.opts = []
			for (i=0; i< column[0].enum.length; i++)
				this.push("opts", {"op": column[0].enum[i], "des": column[0].enumdes[i]})
		}
		else
		{
			this.$.select2.className = ""
			this.$.filtro2.className = "hide"
			this.opts2 = []
			for (i=0; i< column[0].enum.length; i++)
				this.push("opts2", {"op": column[0].enum[i], "des": column[0].enumdes[i]})
		}
	}
	},
	menu: function() {
		
	},
	print: function() {

		window.print()
	},
	download: function() {

		var x2js = new X2JS();
		var datoi = this.data.data
		for (i=0; i<datoi.length; i++)
		{
			delete datoi[i].$loki
			delete datoi[i].meta
			delete datoi[i].createdAt
			delete datoi[i].updatedAt
		}
		var dato = { "data": datoi }
		var xml_data = x2js.json2xml_str(dato)
		xml_data = "<x>"+xml_data+"</x>"
		this.download_data = 'data:application/xml;charset=utf-8,'+xml_data
		this.$.link.click()		
	},
	item_menu_toggle: function(e){
		this.key = Number(e.toElement.offsetParent.key)
		this.$.menu_dialog.style.top = e.toElement.offsetParent.offsetTop+20+"px"
		this.$.menu_dialog.style.left = "30px"
		this.$.menu_dialog.open()
	},
  display: function(e) {

	this.$.menu_dialog.close()
	var filtro = {"id": this.key}
	var item = this.data.find(filtro)[0]
	this.$.App_display_dialog.open_display_dialog(item)
  },
  edit: function(e) {

	this.$.menu_dialog.close()
	var filtro = {"id": this.key}
	var item = this.data.find(filtro)[0]
	this.$.App_edit_dialog.open_dialog(item)
  },
  delete: function(e) {

	this.$.menu_dialog.close()
	var filtro = {"id": this.key}
	var item = this.data.find(filtro)[0]
	this.$.App_delete_dialog.open_delete_dialog(item)
  },
  new: function() {

	this.$.App_new_dialog.open_dialog()
  },
  reload: function() {
	this.$.ajax.generateRequest()
  },
  load_data: function() {

	while(this.data.data[0]) {
        this.data.remove(this.data.data[0])
      }
	/** Validate Resource Authorized **/
	if (typeof (this.$.ajax.lastResponse.auth_msg) !== 'undefined')
	{
		alert(this.$.ajax.lastResponse.auth_msg)
		return
	}
	for (i=0; i< this.$.ajax.lastResponse.length; i++)
	{
		this.$.ajax.lastResponse[i].type_des= this.enums.type[this.$.ajax.lastResponse[i].type]
		this.$.ajax.lastResponse[i].db_des= this.enums.db[this.$.ajax.lastResponse[i].db]
		this.$.ajax.lastResponse[i].status_des= this.enums.status[this.$.ajax.lastResponse[i].status]	
		this.data.insert(this.$.ajax.lastResponse[i])
	}
	this.filter()
  },
  ajax_error: function() {

	console.log(this.$.ajax.lastError)
	alert("<%= lng('Error Processing Request: ')%>", this.$.ajax.lastError)
  }
//USER POINT - List Functions
  ,models: function() {
	this.$.menu_dialog.close()
	var rs = this.data.find({id: this.key})[0]
//	var post_data = {id: this.key, name: rs.name, path: rs.path, type: rs.type, db: rs.db}	
//	post(config_server() + "Model/list", post_data, 'post')
	window.location.href = config_server() + "Model/list?app=" + rs.name + '&app_id=' + rs.id 
  },
  upd_app_sts: function(sts) {
	this.$.ajax2.url = config_server() + "App/status?id="+this.item.id+"&sts="+sts
	this.$.ajax2.generateRequest()
	this.item.status = sts
	this.data.update(this.item)
  },
  app_updated: function() {
	//this.filter()
	this.reload()
  },
  start: function() {
	this.$.menu_dialog.close()
	var filtro = {"id": this.key}
	this.item = this.data.find(filtro)[0]
	
	const ipcRenderer = require('electron').ipcRenderer;
	ipcRenderer.send('start-app', {id: this.item.id, app: this.item.name, port: this.item.port, path: this.item.path});
	
	if (first_time)
	{
		first_time = false
		ipcRenderer.on('started-app',  function(event, arg) { 
			document.getElementById('App_list').upd_app_sts('started')
			var msg = '<%= lng('Application #app Started') %>'
			msg = msg.replace('#app',arg.app)
			alert(msg)
		})
	}
  },
  stop: function() {
	this.$.menu_dialog.close()
	var filtro = {"id": this.key}
	this.item = this.data.find(filtro)[0]
	
	const remote = require('electron').remote
	const spawn = remote.require('child_process').spawn;
			
	const stop = spawn('sh', [ 'stop.sh' ], { cwd: this.item.path+'/'+this.item.name })
	
	stop.on('close', function(code)	{
		if (code == 0) 
		{
			document.getElementById('App_list').upd_app_sts('stopped')
			var name = document.getElementById('App_list').item.name
			var msg = '<%= lng('Application #app Stopped') %>'
			msg = msg.replace('#app',name)
			alert(msg)
		}
		 else alert('<%= lng('Aplication Cannot be Stopped') %>', '<%= lng('Stop App') %>')
	});
  } 
//END USER POINT - List Functions
});
</script>
</dom-module>
<top-bar><%= lng("%s %s",lng("List"),lng("App"))%></top-bar>
<paper-material class="card" elevation="2">
	<App-list id="App_list"></App-list>
</paper-material>
</body>
</html>
