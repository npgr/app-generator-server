<!-- list template: version 7.23 -->
 <% 
 function lng(word) {
	return __("word")
 }
 function lng(word1, word2) {
	return __(word1, word2)
 }
 function lng(word1, word2, word3) {
	return __(word1, word2, word3)
 }
%>  
<html>
<head><meta charset="UTF-8">
	<title><%= lng("%s %s",lng("List"),lng("ProfileResource"))%></title>
	<script src="/bower_components/webcomponentsjs/webcomponents.min.js"></script>
	<script src="/bower_components/intro.js/minified/intro.min.js"></script>
	<script src="/bower_components/jshashes/hashes.min.js"></script>
	<script src="/bower_components/lokijs/build/lokijs.min.js"></script>
	<script src="/bower_components/abdmob/x2js/xml2json.min.js"></script>
	<script src="/components/app-config/app-config.js"></script>
	<script src="/components/app-util/app-util.js"></script>
	<link rel="stylesheet" href="/styles/app.css">
	<link rel="stylesheet" href="/bower_components/intro.js/minified/introjs.min.css">
	<!-- polymer Components -->
	<link rel="import" href="/bower_components/paper-material/paper-material.html">
	<link rel="import" href="/bower_components/paper-input/paper-input.html">
	<link rel="import" href="/bower_components/paper-fab/paper-fab.html">
	<link rel="import" href="/bower_components/iron-icon/iron-icon.html">
	<link rel="import" href="/bower_components/iron-icons/iron-icons.html">
	<link rel="import" href="/bower_components/iron-dropdown/iron-dropdown.html">
	<link rel="import" href="/bower_components/paper-icon-button/paper-icon-button.html">
	<link rel="import" href="/bower_components/paper-button/paper-button.html">
	<link rel="import" href="/bower_components/paper-dialog/paper-dialog.html">
	<link rel="import" href="/bower_components/paper-menu/paper-menu.html">
	<link rel="import" href="/bower_components/paper-item/paper-item.html">
	<link rel="import" href="/bower_components/iron-ajax/iron-ajax.html">
	<!-- Forms imports -->
	<link rel="import" href="/bower_components/polymer/polymer.html">
	<link rel="import" href="/bower_components/paper-dialog/paper-dialog.html">
	<link rel="import" href="/bower_components/paper-dialog-scrollable/paper-dialog-scrollable.html">
	<link rel="import" href="/bower_components/neon-animation/animations/scale-up-animation.html">
	<link rel="import" href="/bower_components/neon-animation/animations/fade-out-animation.html">
<!-- USER POINT - Include Libraries, Styles & Components -->
<!-- END USER POINT - Include Libraries, Styles & Components -->
<script>
    // Google Analytics
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', Google_Analytics_id(), {'sampleRate': 100});
  ga('send', 'pageview');
	
// Redirect to https
  <% if (process.env.HTTPS == 'true') { %>
  if (window.location.protocol != "https:" && window.location.href.indexOf('localhost') == -1)
	window.location.href = "https:" + window.location.href.substring(window.location.protocol.length);
  <% } %>
</script>
<style>
#btn_area {
	display: inline-block;
	margin-left: 30px;
}
#dialog {
	width: 30em;
}
.card {
	width: 60em;
	top: 13px;
	left: 15px;
}
th div {
	display: inline;
}
#menu_dialog {
	position: absolute;
	left: 45px;
}
paper-item {
	min-height: 20px;
	line-height: 35px;
}
paper-dialog {
	margin-top: 0px;
	margin-bottom: 0px;
}
paper-menu {
	margin-top: 0px;
	margin-bottom: 0px;
}
/** USER POINT - General Style **/
/** END USER POINT - General Style **/
</style>

<% include ../partials/topBar %>

<!-- list-columns: version 5.12 -->

<dom-module id="ProfileResource-list-columns">
<template>
<style>
	.green {
		background-color: green;
		color: white;
		height: 30px;
	}
	.orange {
		color: white;
		background-color: orange;
		height: 30px;
	}
	#dialog_columns {
		width: 27em;
	}
	#dialog_columns table div {
		width: 5.5em;
		text-align: center;
		padding-top: 5px;
		height: 28px;
	}
</style>
	<paper-dialog id="dialog_columns" modal vertical layout entry-animation="scale-up-animation" exit-animation="fade-out-animation">
		<h2 class="card_title"><%= lng("%s %s",lng("Columns"),lng("ProfileResource"))%></h2>
			<paper-dialog-scrollable>
			<table class="table_dialog" style="width:100%">
			<tr>
				<td><label class="left_label" for="id"><%= lng('Id')%></label></td>
				<td><div id="id" on-click="change_field"></div></td>
			</tr>
			<tr>
				<td><label class="left_label" for="profile_name"><%= lng('Profile')%></label></td>
				<td><div id="profile_name" on-click="change_field"></div></td>
			</tr>
			<tr>
				<td><label class="left_label" for="resource_name"><%= lng('Resource')%></label></td>
				<td><div id="resource_name" on-click="change_field"></div></td>
			</tr>
			<tr>
				<td><label class="left_label" for="data"><%= lng('Data')%></label></td>
				<td><div id="data" on-click="change_field"></div></td>
			</tr>
			<tr>
				<td><label class="left_label" for="order"><%= lng('Order')%></label></td>
				<td><div id="order" on-click="change_field"></div></td>
			</tr>
			<tr>
				<td><label class="left_label" for="Group"><%= lng('Group')%></label></td>
				<td><div id="Group" on-click="change_field"></div></td>
			</tr>
			</table>
			</paper-dialog-scrollable>
		<div class="buttons">
			<div class="card_line">
				<paper-button id="update_btn" class="btn" on-click="submit_form" raised><%= lng('Change ')%></paper-button>
				<paper-button id="exit_btn" class="btn" dialog-confirm raised><%= lng('Exit')%></paper-button>
			</div>
		</div>
	</paper-dialog>
</template>
<script>
	Polymer({
		is: "ProfileResource-list-columns",
		properties: {
			//updated: false,
			//column: {}
		},
		open_list_columns: function(column) {
			this.updated= false,
			this.column= column
			this.show_field("id")
			this.show_field("profile_name")
			this.show_field("resource_name")
			this.show_field("data")
			this.show_field("order")
			this.show_field("Group")
			this.$.dialog_columns.open()
		},
		change_field: function(e) {
			var field = e.toElement.id
			this.column[field] = !this.column[field]
			this.show_field(field)
		},
		show_field: function(field) {
			if (this.column[field])
			{  
				this.$[field].innerHTML = "<%= lng('Show')%>"
				this.$[field].classList.remove("orange")
				this.$[field].classList.add("green")
			}
			else
			{
				this.$[field].innerHTML = "<%= lng('Hide')%>"
				this.$[field].classList.remove("green")
				this.$[field].classList.add("orange")
			}
		},
		submit_form: function() {
			this.updated = true
			this.$.dialog_columns.close()
			this.fire('close')
		}
	})
</script>
</dom-module>

<!-- new-form: version 5.23 -->

<dom-module id="ProfileResource-new">
<template>
	<iron-ajax id="ajax" handle-as="json" on-response="validate_record" on-error="ajax_error"></iron-ajax>
	<iron-ajax id="ajax2" method="POST" handle-as="json" on-response="record_created" on-error="ajax_error"></iron-ajax>
	<paper-dialog id="dialog" modal vertical layout entry-animation="scale-up-animation" exit-animation="fade-out-animation">
		<Profile-select id="Profile_select_dialog" on-item_selected="set_select_field"></Profile-select>
		<Resource-select id="Resource_select_dialog" on-item_selected="set_select_field"></Resource-select>
		<h2 class="card_title"><%= lng("%s %s",lng("Create"),lng("ProfileResource"))%></h2>
		<paper-dialog-scrollable>
		  <form id="form" action="javascript:void(0);" on-submit="create">
			<table class="table_dialog" style="width:100%">
			<tr>
				<td><label class="left_label" for="id"><%= lng('Id')%></label></td>
				<td><input id="id" type="number" name="id" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="profile"><%= lng('Profile')%></label></td>
				<td><iron-icon icon="find-in-page" field="profile" on-click="select_field_b"></iron-icon><input id="profile" type="text" name="profile" key=0 on-click="select_field" readonly></td>
			</tr>
			<tr>
				<td><label class="left_label" for="resource"><%= lng('Resource')%></label></td>
				<td><iron-icon icon="find-in-page" field="resource" on-click="select_field_b"></iron-icon><input id="resource" type="text" name="resource" key=0 on-click="select_field" readonly></td>
			</tr>
			<tr>
				<td><label class="left_label" for="data"><%= lng('Data')%></label></td>
				<td><select id="data" name="data">
						<option value="all"><%= lng('All')%></option>
						<option value="selected"><%= lng('Selected')%></option>
						<option value="except"><%= lng('All Except')%></option>
						<option value="na"><%= lng('Not Apply')%></option>
					</select></td>
			</tr>
			<tr>
				<td><label class="left_label" for="order"><%= lng('Order')%></label></td>
				<td><input id="order" type="number" name="order"></td>
			</tr>
			<tr>
				<td><label class="left_label" for="Group"><%= lng('Group')%></label></td>
				<td><input id="Group" type="text" name="Group"></td>
			</tr>
			</table>
			<div class="buttons">
				<input id="submit_btn" class="hide" type="submit" value="CREAR">
				<div class="card_line">
					<%= lng('Repeat ')%><input id="repeat" type="checkbox" name="repeat">
					<paper-button id="create_btn" class="btn" on-click="submit_form" raised><%= lng('Create')%></paper-button>
					<paper-button id="exit_btn" class="btn" dialog-confirm raised><%= lng('Exit')%></paper-button>
				</div>
			</div>
		  </form>
		</paper-dialog-scrollable>
	</paper-dialog>
</template>
<script>
	Polymer({
		is: "ProfileResource-new",
		open_dialog: function() {
			this.clear()
/** USER POINT - Open New Dialog **/
/** END USER POINT - Open New Dialog **/
			this.$.dialog.open()
		},
		clear: function() {
			this.$.id.value = ''
			this.$.profile.value = ''
			this.$.profile.key = 0
			this.$.resource.value = ''
			this.$.resource.key = 0
			this.$.order.value = ''
			this.$.Group.value = ''
		},
		select_field_b: function(e) {
			this.$[e.toElement.getAttribute("field")].click()
		},
		select_field: function(e) {
			this.field = e.toElement.id
			if (this.field == "profile")
				this.$.Profile_select_dialog.open_select_dialog()
			if (this.field == "resource")
				this.$.Resource_select_dialog.open_select_dialog()
		},
		set_select_field: function(e) {
			this.$[this.field].value = this.$[e.srcElement.id].item.name
			this.$[this.field].key = this.$[e.srcElement.id].item.key
		},
		create: function() {
			this.$.ajax2.url = config_server() + "ProfileResource"
			var record = {}
			record.profile = this.$.profile.key
			record.resource = this.$.resource.key
			  record.data = this.$.data.value
			record.order = Number(this.$.order.value)
			  record.Group = this.$.Group.value
/** USER POINT - Before Create **/
/** END USER POINT - Before Create **/			
			this.$.ajax2.params = record
			this.$.ajax2.generateRequest()
		},
		record_created: function() {
			/** Validate Resource Authorized **/
			if (typeof this.$.ajax2.lastResponse.auth_msg !== 'undefined')
			{
				alert(this.$.ajax2.lastResponse.auth_msg)
				return
			}
/** USER POINT - Record Created **/
/** END USER POINT - Record Created **/
			alert("<%= lng('Record Created')%>")
			// ask for create another one
			if (!this.$.repeat.checked) {
				this.$.dialog.close()
				this.fire('close')
			} else 
				this.clear()
		},
		submit_form: function() {
/** USER POINT - Validate Before Create **/
/** END USER POINT - Validate Before Create **/
			if (!isNaN(this.$.id.value))
			{
				if (this.$.id.value > 0)
				{
					this.$.ajax.url = config_server() + "ProfileResource/exist/"+this.$.id.value
					this.$.ajax.generateRequest()
				}
				else this.$.submit_btn.click()
			} else
				this.$.submit_btn.click()
		},
		validate_record: function() {
			if (this.$.ajax.lastResponse.exist) 
				alert("<%= lng('Record already Exist')%>")
			else
				this.$.submit_btn.click()
		},
		ajax_error: function() {
			console.log(this.$.ajax.lastError)
			alert("<%= lng('Error Processing Request: ')%>", this.$.ajax.lastError)
		}
/** USER POINT - New Functions **/
/** END USER POINT - New Functions **/		
	})
</script>
</dom-module>

<!-- display-form: version 5.20 -->

<dom-module id="ProfileResource-display">
<template>
	<paper-dialog id="dialog" modal vertical layout entry-animation="scale-up-animation" 	exit-animation="fade-out-animation">
		<h2 class="card_title"><%= lng("%s %s",lng("Display"),lng("ProfileResource"))%></h2>
		  <paper-dialog-scrollable>
			<table class="table_dialog" style="width:100%">
			<tr>
				<td><label class="left_label" for="id"><%= lng('Id')%></label></td>
				<td><input id="id" type="number" name="id" value="{{item.id}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="profile"><%= lng('Profile')%></label></td>
				<td><input id="profile" type="text" name="profile" value="{{item.profile_name}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="resource"><%= lng('Resource')%></label></td>
				<td><input id="resource" type="text" name="resource" value="{{item.resource_name}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="data"><%= lng('Data')%></label></td>
				<td><select id="data" name="data" disabled>
						<option value="all"><%= lng('All')%></option>
						<option value="selected"><%= lng('Selected')%></option>
						<option value="except"><%= lng('All Except')%></option>
						<option value="na"><%= lng('Not Apply')%></option>
					</select></td>
			</tr>
			<tr>
				<td><label class="left_label" for="order"><%= lng('Order')%></label></td>
				<td><input id="order" type="number" name="order" value="{{item.order}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="Group"><%= lng('Group')%></label></td>
				<td><input id="Group" type="text" name="Group" value="{{item.Group}}" disabled></td>
			</tr>
			</table>
		  </paper-dialog-scrollable>
		<div class="buttons">
			<div class="card_line">
				<paper-button id="exit_btn" class="btn" dialog-confirm raised><%= lng('Exit')%></paper-button>
			</div>
		</div>
	</paper-dialog>
</template>
<script>
	Polymer({
		is: "ProfileResource-display",
		open_display_dialog: function(item) {
			this.item = item
			this.set_select_fields(item)
/** USER POINT - Open Display Dialog **/
/** END USER POINT - Open Display Dialog **/
			this.$.dialog.open()
		},
		set_select_fields(item) {
			this.$.data.value = item.data
			}
/** USER POINT - Display Functions **/
/** END USER POINT - Display Functions **/
	})
</script>
</dom-module>

<!-- edit-form: version 5.23 -->

<dom-module id="ProfileResource-edit">
<template>
	<iron-ajax id="ajax" method="PUT" handle-as="json" on-response="record_updated" on-error="ajax_error"></iron-ajax>
	<paper-dialog id="dialog" modal vertical layout entry-animation="scale-up-animation" 	exit-animation="fade-out-animation">
		<Profile-select id="Profile_select_dialog" on-item_selected="set_select_field"></Profile-select>
		<Resource-select id="Resource_select_dialog" on-item_selected="set_select_field"></Resource-select>
		<h2 class="card_title"><%= lng("%s %s",lng("Edit"),lng("ProfileResource"))%></h2>
		<paper-dialog-scrollable>
		<form id="form" action="javascript:void(0);" on-submit="update">
			<table class="table_dialog" style="width:100%">
			<tr>
				<td><label class="left_label" for="id"><%= lng('Id')%></label></td>
				<td><input id="id" type="number" name="id" value="{{item.id}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="profile"><%= lng('Profile')%></label></td>
				<td><iron-icon icon="find-in-page" field="profile" on-click="select_field_b"></iron-icon><input id="profile" type="text" name="profile" key={{item.profile_id}} value="{{item.profile_name}}" on-click="select_field" readonly></td>
			</tr>
			<tr>
				<td><label class="left_label" for="resource"><%= lng('Resource')%></label></td>
				<td><iron-icon icon="find-in-page" field="resource" on-click="select_field_b"></iron-icon><input id="resource" type="text" name="resource" key={{item.resource_id}} value="{{item.resource_name}}" on-click="select_field" readonly></td>
			</tr>
			<tr>
				<td><label class="left_label" for="data"><%= lng('Data')%></label></td>
				<td><select id="data" name="data">
						<option value="all"><%= lng('All')%></option>
						<option value="selected"><%= lng('Selected')%></option>
						<option value="except"><%= lng('All Except')%></option>
						<option value="na"><%= lng('Not Apply')%></option>
					</select></td>
			</tr>
			<tr>
				<td><label class="left_label" for="order"><%= lng('Order')%></label></td>
				<td><input id="order" type="number" name="order" value="{{item.order}}"></td>
			</tr>
			<tr>
				<td><label class="left_label" for="Group"><%= lng('Group')%></label></td>
				<td><input id="Group" type="text" name="Group" value="{{item.Group}}"></td>
			</tr>
			</table>
			<div class="buttons">
			  <input id="submit_update" class="hide" type="submit" value="CAMBIAR">
			  <div class="card_line">
				<paper-button id="update_btn" class="btn" on-click="submit_form" raised><%= lng('Change ')%></paper-button>
				<paper-button id="exit_btn" class="btn" dialog-confirm raised><%= lng('Exit')%></paper-button>
			  </div>
			</div>
		</form>
		</paper-dialog-scrollable>
	</paper-dialog>
</template>
<script>
	Polymer({
		is: "ProfileResource-edit",
		open_dialog: function(item) {
			this.item = item
			this.set_select_fields(item)
/** USER POINT - Open Edit Dialog **/
/** END USER POINT - Open Edit Dialog **/
			this.$.dialog.open()
		},
		set_select_fields(item) {
			this.$.data.value = item.data
			},
		select_field_b: function(e) {
			this.$[e.toElement.getAttribute("field")].click()
		},
		select_field: function(e) {
			this.field = e.toElement.id
			if (this.field == "profile")
				this.$.Profile_select_dialog.open_select_dialog()
			if (this.field == "resource")
				this.$.Resource_select_dialog.open_select_dialog()
		},
		set_select_field: function(e) {
			this.$[this.field].value = this.$[e.srcElement.id].item.name
			this.$[this.field].key = this.$[e.srcElement.id].item.key
		},
		submit_form: function() {
/** USER POINT - Validate Before Update **/
/** END USER POINT - Validate Before Update **/
			this.$.submit_update.click()
		},
		update: function() {
			var record = {}
			record.id = Number(this.$.id.value)
			record.profile = this.$.profile.key
			record.resource = this.$.resource.key
			record.data = this.$.data.value
			record.order = Number(this.$.order.value)
			record.Group = this.$.Group.value
			this.$.ajax.url = config_server() + "ProfileResource/" +record.id
/** USER POINT - Before Update **/
/** END USER POINT - Before Update **/
			this.$.ajax.params = record
			this.$.ajax.generateRequest()
		},
		record_updated: function() {
			/** Validate Resource Authorized **/
			if (typeof this.$.ajax.lastResponse.auth_msg !== 'undefined')
			{
				alert(this.$.ajax.lastResponse.auth_msg)
				return
			}
/** USER POINT - Record Updated **/
/** END USER POINT - Record Updated **/
			alert("<%= lng('Record Updated')%>")
			this.$.dialog.close()
			this.fire('close')
		},
		ajax_error: function() {
			console.log(this.$.ajax.lastError)
			alert("<%= lng('Error Processing Request: ')%>", this.$.ajax.lastError)
		}
/** USER POINT - Edit Functions **/
/** END USER POINT - Edit Functions **/
	})
</script>
</dom-module>

<!-- delete-form: version 5.23 -->

<dom-module id="ProfileResource-delete">
<template>
	<iron-ajax id="ajax" method="DELETE" handle-as="json" on-response="record_deleted" on-error="ajax_error"></iron-ajax>
	<paper-dialog id="dialog" modal vertical layout entry-animation="scale-up-animation" exit-animation="fade-out-animation">
		<h2 class="card_title"><%= lng("%s %s",lng("Delete"),lng("ProfileResource"))%></h2>
		<paper-dialog-scrollable>
		<form id="form" action="javascript:void(0);" on-submit="delete">
			<table class="table_dialog" style="width:100%">
			<tr>
				<td><label class="left_label" for="id"><%= lng('Id')%></label></td>
				<td><input id="id" type="number" name="id" value="{{item.id}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="profile"><%= lng('Profile')%></label></td>
				<td><input id="profile" type="text" name="profile" value="{{item.profile_name}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="resource"><%= lng('Resource')%></label></td>
				<td><input id="resource" type="text" name="resource" value="{{item.resource_name}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="data"><%= lng('Data')%></label></td>
				<td><select id="data" name="data" disabled>
						<option value="all"><%= lng('All')%></option>
						<option value="selected"><%= lng('Selected')%></option>
						<option value="except"><%= lng('All Except')%></option>
						<option value="na"><%= lng('Not Apply')%></option>
					</select></td>
			</tr>
			<tr>
				<td><label class="left_label" for="order"><%= lng('Order')%></label></td>
				<td><input id="order" type="number" name="order" value="{{item.order}}" disabled></td>
			</tr>
			<tr>
				<td><label class="left_label" for="Group"><%= lng('Group')%></label></td>
				<td><input id="Group" type="text" name="Group" value="{{item.Group}}" disabled></td>
			</tr>
			</table>
		<div class="buttons">
			<input id="submit_delete" class="hide" type="submit" value="BORRAR">
			<div class="card_line">
				<paper-button id="delete_btn" class="btn" on-click="form_submit" raised><%= lng('Delete')%></paper-button>
				<paper-button id="exit_btn" class="btn" dialog-confirm raised><%= lng('Exit')%></paper-button>
			</div>
		</div>
		</form>
		</paper-dialog-scrollable>
	</paper-dialog>
</template>
<script>
	Polymer({
		is: "ProfileResource-delete",
		open_delete_dialog: function(item) {
			this.item = item
			this.set_select_fields(item)
/** USER POINT - Open Delete Dialog **/
/** END USER POINT - Open Delete Dialog **/
			this.$.dialog.open()
		},
		set_select_fields(item) {
			this.$.data.value = item.data
			},
		form_submit: function() {
			this.$.submit_delete.click()
		},
		delete: function() {
/** USER POINT - Before Delete **/
/** END USER POINT - Before Delete **/
			this.$.ajax.url = config_server() + "ProfileResource/"+this.item.id
			this.$.ajax.generateRequest()
		},
		record_deleted: function() {
			/** Validate Resource Authorized **/
			if (typeof this.$.ajax.lastResponse.auth_msg !== 'undefined')
			{
				alert(this.$.ajax.lastResponse.auth_msg)
				return
			}
/** USER POINT - Record Deleted **/
/** END USER POINT - Record Deleted **/
			alert("<%= lng('Record Deleted')%>")
			this.$.dialog.close()
			this.fire('close')
		},
		ajax_error: function() {
			console.log(this.$.ajax.lastError)
			alert("<%= lng('Error Processing Request: ')%>", this.$.ajax.lastError)
		}
/** USER POINT - Delete Functions **/
/** END USER POINT - Delete Functions **/
	})
</script>
</dom-module>


<!-- select-model: version 5.10 -->
 <% 
 function lng(word) {
	return __("word")
 }
 function lng(word1, word2, word3) {
	return __(word1, word2, word3)
 }
%>  

<dom-module id="Profile-select">
<template>
	<iron-ajax id="ajax" method='GET' handle-as="json" on-response="get_data" on-error="ajax_error"></iron-ajax>
	<paper-dialog id="dialog" vertical layout>
		<iron-icon icon="close" on-click="close" mini></iron-icon>  
		<div><input id="filtro" type="{{tipo}}" on-input="filter" placeholder="<%= lng('Profile')%>..."></div>
		<paper-dialog-scrollable>
		<template id="template_items" is="dom-repeat" items="{{filtered_data}}">
			<div id="{{item.id}}" on-click="select">{{item.name}}</div>
		</template>
		</paper-dialog-scrollable>
	</paper-dialog>
</template>
<script>
	Polymer({
		is: "Profile-select",
		open_select_dialog: function() {
			this.$.filtro.value = ""
			this.$.ajax.url= config_server() +"Profile"
			var db = new loki()
			this.data = db.addCollection("data_Profile")
			this.filtered_data = []
			this.load_data()
			this.tipo="string" //filter type
			this.$.dialog.open()
		},
		close: function() {
			this.$.dialog.close()
		},
		load_data: function() {
			this.$.ajax.generateRequest()
		},
		get_data: function() {
			while(this.data.data[0]) {
				this.data.remove(this.data.data[0])
			}
			for (i=0; i< this.$.ajax.lastResponse.length; i++)
				this.data.insert(this.$.ajax.lastResponse[i])
			this.filter()
		},
		filter: function() {
			this.filtered_data = []
			this.cur_filter = { name: { $contains: this.$.filtro.value} }
			this.result_set = this.data.chain().find(this.cur_filter).simplesort("name", false)
			this.filtered_data = this.result_set.data()
		},
		select: function(e) {
			this.item = {}
			this.item.key = e.toElement.id
			this.item.name = e.toElement.innerHTML
			this.$.dialog.close()
			//this.close()
			this.fire('item_selected')
		},
		ajax_error: function() {
			console.log(this.$.ajax.lastError)
			alert("<%= lng('Error Processing Request: ')%>", this.$.ajax.lastError)
		}
	})
</script>
</dom-module>
<!-- select-model: version 5.10 -->
 <% 
 function lng(word) {
	return __("word")
 }
 function lng(word1, word2, word3) {
	return __(word1, word2, word3)
 }
%>  

<dom-module id="Resource-select">
<template>
	<iron-ajax id="ajax" method='GET' handle-as="json" on-response="get_data" on-error="ajax_error"></iron-ajax>
	<paper-dialog id="dialog" vertical layout>
		<iron-icon icon="close" on-click="close" mini></iron-icon>  
		<div><input id="filtro" type="{{tipo}}" on-input="filter" placeholder="<%= lng('Resource')%>..."></div>
		<paper-dialog-scrollable>
		<template id="template_items" is="dom-repeat" items="{{filtered_data}}">
			<div id="{{item.id}}" on-click="select">{{item.name}}</div>
		</template>
		</paper-dialog-scrollable>
	</paper-dialog>
</template>
<script>
	Polymer({
		is: "Resource-select",
		open_select_dialog: function() {
			this.$.filtro.value = ""
			this.$.ajax.url= config_server() +"Resource"
			var db = new loki()
			this.data = db.addCollection("data_Resource")
			this.filtered_data = []
			this.load_data()
			this.tipo="string" //filter type
			this.$.dialog.open()
		},
		close: function() {
			this.$.dialog.close()
		},
		load_data: function() {
			this.$.ajax.generateRequest()
		},
		get_data: function() {
			while(this.data.data[0]) {
				this.data.remove(this.data.data[0])
			}
			for (i=0; i< this.$.ajax.lastResponse.length; i++)
				this.data.insert(this.$.ajax.lastResponse[i])
			this.filter()
		},
		filter: function() {
			this.filtered_data = []
			this.cur_filter = { name: { $contains: this.$.filtro.value} }
			this.result_set = this.data.chain().find(this.cur_filter).simplesort("name", false)
			this.filtered_data = this.result_set.data()
		},
		select: function(e) {
			this.item = {}
			this.item.key = e.toElement.id
			this.item.name = e.toElement.innerHTML
			this.$.dialog.close()
			//this.close()
			this.fire('item_selected')
		},
		ajax_error: function() {
			console.log(this.$.ajax.lastError)
			alert("<%= lng('Error Processing Request: ')%>", this.$.ajax.lastError)
		}
	})
</script>
</dom-module>

<dom-module id="ProfileResource-list">
<template>
<!--USER POINT - List Style-->
<!--END USER POINT - List Style-->
	<iron-ajax id="ajax" handle-as="json" on-response="load_data" on-error="ajax_error"></iron-ajax>
	<ProfileResource-list-columns id="ProfileResource_list_columns" on-close="update_columns"></ProfileResource-list-columns>
	<ProfileResource-new id="ProfileResource_new_dialog" on-close="reload"></ProfileResource-new>
	<ProfileResource-display id="ProfileResource_display_dialog"></ProfileResource-display>
	<ProfileResource-edit id="ProfileResource_edit_dialog" on-close="reload"></ProfileResource-edit>
	<ProfileResource-delete id="ProfileResource_delete_dialog" on-close="reload"></ProfileResource-delete>
	<Profile-select id="Profile_select_dialog" on-item_selected="set_select_field"></Profile-select>
	<Resource-select id="Resource_select_dialog" on-item_selected="set_select_field"></Resource-select>	
	<!--<div class="card_title"><%= lng("%s %s",lng("List"),lng("ProfileResource"))%></div>-->
<!--USER POINT - List Header-->
<!--END USER POINT - List Header-->
	<select id="filter" on-change="input_type">  <%= lng('Id')%>
		<option value="id"><%= lng('Id')%></option>
		<option value="profile_name"><%= lng('Profile')%></option>
		<option value="resource_name"><%= lng('Resource')%></option>  <%= lng('Data')%>
		<option value="data"><%= lng('Data')%></option>  <%= lng('Order')%>
		<option value="order"><%= lng('Order')%></option>  <%= lng('Group')%>
		<option value="Group"><%= lng('Group')%></option>
	</select>
	<select id="op">   
		<option value="$eq"><%= lng('Equal to')%></option>
		<option value="$ne"><%= lng('Different to')%></option>
		<option value="$contains"><%= lng('Contains')%></option>
		<option value="$gte"><%= lng('Greater or Equal to')%></option>
		<option value="$lte"><%= lng('Less or Equal to')%></option>
	</select>
	<input id="filtro" type="{{tipo}}" on-click="select_field">
	<select id="select" class="hide">
	  <template is="dom-repeat" items="{{opts}}">
		<option value="{{item.op}}">{{item.des}}</option>
	  </template>
	</select>
	<select id="logic" on-change="logic_operator">
		<option value="-">---</option>
		<option value="$and">And</option>
		<option value="$or">Or</option>
	</select>
	<paper-button class="btn" on-click="filter" raised><%= lng('Find')%></paper-button>
	<strong id="total">{{regs}}</strong>
	<div id="btn_area">
		<paper-fab id="btn_add" mini on-click="new" icon="add"></paper-fab>
		<paper-fab id="btn_down" mini on-click="download" icon="file-download"></paper-fab>
		<paper-fab id="btn_print" mini on-click="print" icon="print"></paper-fab>
		<paper-fab id="btn_help" mini on-click="help" icon="help"></paper-fab>
		<!--<paper-fab id="btn_menu" mini on-click="menu" icon="list"></paper-fab>-->
	</div>
	<a href="{{download_data}}" id="link" class="hide" download="ProfileResource.xml">Download Data</a>
	<br>
	<select id="filter2" class="hide" on-change="input_type2">
		<option value="id"><%= lng('Id')%></option>
		<option value="profile_name"><%= lng('Profile')%></option>
		<option value="resource_name"><%= lng('Resource')%></option>
		<option value="data"><%= lng('Data')%></option>
		<option value="order"><%= lng('Order')%></option>
		<option value="Group"><%= lng('Group')%></option>
	</select>
	<select id="op2" class="hide" >   
		<option value="$eq"><%= lng('Equal to')%></option>
		<option value="$ne"><%= lng('Different to')%></option>
		<option value="$contains"><%= lng('Contains')%></option>
		<option value="$gte"><%= lng('Greater or Equal to')%></option>
		<option value="$lte"><%= lng('Less or Equal to')%></option>
	</select>
	<input id="filtro2" class="hide" type="{{tipo2}}" on-click="select_field">
	<select id="select2" class="hide">
	  <template is="dom-repeat" items="{{opts2}}">
		<option value="{{item.op}}">{{item.des}}</option>
	  </template>
	</select>

	<paper-dialog id="menu_dialog"> 
		<paper-menu>
			<paper-item on-click="display" style="min-height:20px;line-height:35px;"><%= lng('Display')%></paper-item>
			<paper-item on-click="edit" style="min-height:20px;line-height:35px;"><%= lng('Edit')%></paper-item>
			<paper-item on-click="delete" style="min-height:20px;line-height:35px;"><%= lng('Delete')%></paper-item>
<!--USER POINT - List Detail Menu-->
<!--END USER POINT - List Detail Menu-->
		</paper-menu>
	</paper-dialog>
	<table id="data_table" class="table_list" style="width:100%">
	<thead>
	  <tr>
		<th id="th_ops" class="ops"><paper-icon-button on-click="list_columns" icon="settings"></paper-icon-button></th>
		<th class="col_id" on-click="sort_by_field"><%= lng('Id')%><div id="id_sort_d" class="hide">
			<iron-icon id="id_sort" icon="arrow-drop-up"></iron-icon></div></th>
		<th class="col_profile_name" on-click="sort_by_field"><%= lng('Profile')%><div id="profile_name_sort_d" class="hide">
			<iron-icon id="profile_name_sort" icon="arrow-drop-up"></iron-icon></div></th>
		<th class="col_resource_name" on-click="sort_by_field"><%= lng('Resource')%><div id="resource_name_sort_d" class="hide">
			<iron-icon id="resource_name_sort" icon="arrow-drop-up"></iron-icon></div></th>
		<th class="col_data" on-click="sort_by_field"><%= lng('Data')%><div id="data_sort_d" class="hide">
			<iron-icon id="data_sort" icon="arrow-drop-up"></iron-icon></div></th>
		<th class="col_order" on-click="sort_by_field"><%= lng('Order')%><div id="order_sort_d" class="hide">
			<iron-icon id="order_sort" icon="arrow-drop-up"></iron-icon></div></th>
		<th class="col_Group" on-click="sort_by_field"><%= lng('Group')%><div id="Group_sort_d" class="hide">
			<iron-icon id="Group_sort" icon="arrow-drop-up"></iron-icon></div></th>
	  </tr>
	</thead>
	<!--<tfoot>
	<tr>
		<td class="ops"></td>
		<td class="col_id"></td>
		<td class="col_profile_name"></td>
		<td class="col_resource_name"></td>
		<td class="col_data"></td>
		<td class="col_order"></td>
		<td class="col_Group"></td>
	</tr>
	</tfoot>-->
	<tbody>
	<template id="template_items" is="dom-repeat" items="{{filtered_data}}">
	<tr>
		<td id="td_ops" class="ops">
			<paper-icon-button key="{{item.id}}" on-click="item_menu_toggle" class="icon-op" icon="list"></paper-icon-button>
		</td>
		<template is="dom-if" if="{{column.id}}"><td>{{item.id}}</td></template>
		<template is="dom-if" if="{{column.profile_name}}"><td>{{item.profile_name}}</td></template>
		<template is="dom-if" if="{{column.resource_name}}"><td>{{item.resource_name}}</td></template>
		<template is="dom-if" if="{{column.data}}"><td>{{item.data_des}}</td></template>
		<template is="dom-if" if="{{column.order}}"><td>{{item.order}}</td></template>
		<template is="dom-if" if="{{column.Group}}"><td>{{item.Group}}</td></template>
	</tr>
	</template>
	</tbody>
</table>
</template>
<script>
Polymer({
	is: "ProfileResource-list",
	properties: {
		//cur_sort: { field: "id", isdesc: false },
		//cur_filter: {}
	},
	ready: function() {
//USER POINT - List Start Ready
//END USER POINT - List Start Ready
		// For Sharepoint
		if (typeof String.prototype.startsWith != 'function') {
			// see below for better implementation!
			String.prototype.startsWith = function (str){
				return this.indexOf(str) === 0;
			}
		}
		this.$.ajax.url = config_server() + "ProfileResource"
		this.cur_sort = { field: "id", isdesc: true }
		this.cur_filter = {}
		var _model = [{column: "id", type: "integer", display: true},
				{column: "profile_id", type: "integer", model: "Profile", display: false},
				{column: "profile_name", type: "string", model: "Profile", display: true},
				{column: "resource_id", type: "integer", model: "Resource", display: false},
				{column: "resource_name", type: "string", model: "Resource", display: true},
				{column: "data", enum: ["all","selected","except","na"], enumdes: ["<%= lng("All")%>","<%= lng("Selected")%>","<%= lng("All Except")%>","<%= lng("Not Apply")%>"], display: true},
				{column: "order", type: "integer", display: true},
				{column: "Group", type: "string", display: true}
		]
		this.enums = {}
		this.enums.data = {all:"<%= lng('All')%>",selected:"<%= lng('Selected')%>",except:"<%= lng('All Except')%>",na:"<%= lng('Not Apply')%>"}
		//var _data = <%- data %>
		var db = new loki()
		this.data = db.addCollection("data_ProfileResource")
		this.model = db.addCollection("model_ProfileResource")
		this.reload()
		for (i=0; i< _model.length ; i++)
			this.model.insert(_model[i])
		_model = {}
		this.input_type()
		this.set_filter() //and columns & sort from localStorage
		var intro = introJs()
		intro.setOptions({
			doneLabel: '<%= lng('Exit')%>',
			steps: [
				{ element: '#btn_help',
				intro: 'Para Obtener Ayuda acerca de esta página, puede utilizar el boton de ayuda'}],
			showStepNumbers:false
		})
		/*document.addEventListener('DOMContentLoaded', function() {
			setTimeout(function(){
				intro.start()
			}, 600);	
		}, false);*/
//USER POINT - List End Ready
//END USER POINT - List End Ready
	},
	help: function() {
		ga('send', 'event', 'ProfileResource', 'ProfileResource_help')
		var intro = introJs()
		
		intro.setOptions({ 
			skipLabel: '<%= lng('Exit')%>', 
			nextLabel: '<%= lng('Next')%>', 
			prevLabel: '<%= lng('Previous')%>',
			doneLabel: '<%= lng('Exit')%>',
			showStepNumbers:false,
			steps: [
				{ element: '#filter',
				intro: 'Puede seleccionar cualquier campo como filtro de la lista'},
				{ element: '#op',
				intro: 'operación de comparación'},
				{ element: '#filtro',
				intro: 'valor de comparación'},
				{ element: '#logic',
				intro: 'Se puede agregar un segundo filtro'},
				{ element: '#btn_add',
				intro: 'Botón para crear nuevo registro'},
				{ element: '#btn_down',
				intro: 'Boton para descargar archivo de datos, el cual puede ser leido en Excel'},
				{ element: '#btn_print',
				intro: 'Botón de Impresión, se puede exportar a pdf'},
				{element: '#data_table',
				intro: 'Lista de registros filtrados',
				position: 'top'},
				{element: '#th_ops',
				intro: 'Consigurar columnas a mostrar en lista de registros'},
				{element: '#td_ops',
				intro: 'Opciones para:<br> - Visualizar Registro<br> - Editar Registro<br> - Borrar Registro'}
			]
		})
		intro.start()
	},
	list_columns: function() {
		ga('send', 'event', 'ProfileResource', 'ProfileResource_list_columns')
		this.$.ProfileResource_list_columns.open_list_columns(this.column)
	},
	update_columns: function() {
		var columns = {}
		this.column = this.$.ProfileResource_list_columns.column
		for (i=0; i < this.model.data.length; i++ )
		{
			this.model.data[i].display = this.column[this.model.data[i].column]
			columns[this.model.data[i].column] = this.column[this.model.data[i].column]
		}
		localStorage["ProfileResource-list-columns"] = JSON.stringify(columns)
		this.show_columns()
		// reset filter
		this.$.filter.value = "id"
		this.$.op.value = "$eq"
		this.$.filtro.value = ""
		this.$.logic.value = "-"
		this.logic_operator()
		this.filter()
	},
	show_columns: function() {
		var column = ''
		this.column = {}
		var el = []
		for (i=0; i < this.model.data.length; i++)
		{
			this.column[this.model.data[i].column] = this.model.data[i].display
			column = 'col_'+ this.model.data[i].column
			el = this.$.data_table.querySelectorAll('.'+column)
			for (j=0; j< el.length; j++)
				if (this.model.data[i].display)
					el[j].classList.remove("hide")
				else
					el[j].classList.add("hide")
		}
	},
	date_dma: function(datex) {
		return datex_dma(datex)
	},
	logic_operator: function() {
		if (this.$.logic.value == "-") {
			this.$.filter2.className = "hide"
			this.$.op2.className = "hide"
			this.$.filtro2.className = "hide"
			this.$.select2.className = "hide"
		} else
		{
			this.$.filter2.className = ""
			this.$.op2.className = ""
			this.input_type(2)
			//this.$.filtro2.className = ""
			//this.$.select2.className = ""
		}
	},
	select_field: function(e) {
		this.field = e.toElement.id
		var filter = ""
		switch (this.field) {
		  case "filtro":
			filter = "filter"
		  break;
		  case "filtro2":
			filter = "filter2"
		  break;
		}
		if (filter != "")
		{
		  if (this.$[filter].value == "profile_name"){
			this.$.Profile_select_dialog.style.top = e.toElement.offsetParent.offsetTop+"px"
			//this.$.Profile_select_dialog.style.left = "-100px"
			this.$.Profile_select_dialog.open_select_dialog()
		  }
		  if (this.$[filter].value == "resource_name"){
			this.$.Resource_select_dialog.style.top = e.toElement.offsetParent.offsetTop+"px"
			//this.$.Resource_select_dialog.style.left = "-100px"
			this.$.Resource_select_dialog.open_select_dialog()
		  }
		}
	},
	set_select_field: function(e) {
		this.$[this.field].value = this.$[e.srcElement.id].item.name
	},
	set_filter: function() {
		if (localStorage["ProfileResource-list-filter"])
		{
			var stored_filter = JSON.parse(localStorage["ProfileResource-list-filter"])
			this.$.filter.value = stored_filter.filter
			this.$.op.value = stored_filter.op
			this.input_type()
			var column = this.model.find({ "column": this.$.filter.value})
			if (column[0].enum)
				if (column[0].type != "number")
					this.$.select.value = stored_filter.value
				else
					this.$.select.value = Number(stored_filter.value)
			else
				if (column[0].type != "number")
					this.$.filtro.value = stored_filter.value
				else
					this.$.filtro.value = Number(stored_filter.value)
			if  (stored_filter.filter2)
			{
				this.$.logic.value = stored_filter.logic
				this.logic_operator()
				this.$.filter2.value = stored_filter.filter2
				this.$.op2.value = stored_filter.op2
				this.input_type(2)
				var column = this.model.find({ "column": this.$.filter2.value})
				if (column[0].enum)
					if (column[0].type != "number")
						this.$.select2.value = stored_filter.value2
					else
						this.$.select2.value = Number(stored_filter.value2)
				else
					if (column[0].type != "number")
						this.$.filtro2.value = stored_filter.value2
					else
						this.$.filtro2.value = Number(stored_filter.value2)
			}
			this.filter()
		}
		if (localStorage["ProfileResource-list-columns"])
		{
			var columns = JSON.parse(localStorage["ProfileResource-list-columns"])
			for (i=0; i < this.model.data.length; i++ )
			  this.model.data[i].display = columns[this.model.data[i].column]
		}
		this.show_columns()
	},
	filter: function() {
		var stored_filter = {}
 		var name = this.$.filter.value
		ga('send', 'event', 'ProfileResource', 'ProfileResource_filter_by_'+name)
		stored_filter.filter = name
		var op = this.$.op.value
		stored_filter.op = op 
		var valor = {}
		this.cur_filter = {}
		if (this.$.filtro.getAttribute("class") != "hide")
			if (this.$.filtro.getAttribute("type") == "number") 
				valor[op] = Number(this.$.filtro.value)
		 	else 
				valor[op] = this.$.filtro.value
		else 
			valor[op] = this.$.select.value
		this.cur_filter[name] = valor
		stored_filter.value = valor[op]
		if (this.$.logic.value != "-")
		{
			name = this.$.filter2.value
			op = this.$.op2.value
			stored_filter.logic = this.$.logic.value
			stored_filter.filter2 = name
			stored_filter.op2 = op 
			valor = {}
			var logic_op = this.$.logic.value
			var filtro2 = {}
			if (this.$.filtro2.getAttribute("class") != "hide")
				if (this.$.filtro2.getAttribute("type") == "number") 
					valor[op] = Number(this.$.filtro2.value)
				else 
					valor[op] = this.$.filtro2.value
			else 
				valor[op] = this.$.select2.value
			stored_filter.value2 = valor[op]
			filtro2[name] = valor
			var filtro = this.cur_filter
			this.cur_filter = {}
			this.cur_filter[logic_op] = [filtro, filtro2]	
		}
		localStorage["ProfileResource-list-filter"] = JSON.stringify(stored_filter)
		this.result_set = this.data.chain().find(this.cur_filter).simplesort(this.cur_sort.field, this.cur_sort.isdesc)
		this.filtered_data = []
		this.filtered_data = this.result_set.data()
		this.regs = this.filtered_data.length + " reg"
	},
	hide_sort_icons: function() {
		this.$.id_sort_d.classList.add("hide")
		this.$.profile_name_sort_d.classList.add("hide")
		this.$.resource_name_sort_d.classList.add("hide")
		this.$.data_sort_d.classList.add("hide")
		this.$.order_sort_d.classList.add("hide")
		this.$.Group_sort_d.classList.add("hide")
	},
	sort_by_field: function(e) {
		var field = e.target.classList[0].replace('col_','')
		ga('send', 'event', 'ProfileResource', 'ProfileResource_sort_by_'+field)
		this.hide_sort_icons()
		this.sort(field)
		if (this.cur_sort.isdesc)
			this.$[field+"_sort"].setAttribute("icon", "arrow-drop-down")
		  else
			this.$[field+"_sort"].setAttribute("icon", "arrow-drop-up")
		this.$[field+"_sort_d"].classList.remove("hide")	
	},
	sort: function(field) {
		if (this.cur_sort.field == field)
			this.cur_sort.isdesc = !this.cur_sort.isdesc
		 else
			this.cur_sort = { field: field, isdesc: false}
		this.result_set = this.data.chain().find(this.cur_filter).simplesort(this.cur_sort.field, this.cur_sort.isdesc)
		this.filtered_data = this.result_set.data()
	},
	input_type2: function() {
		this.input_type(2)
	},
	input_type: function(n) {
	if (n!= 2)
	{
		this.$.filtro.value = ""
		var column = this.model.find({ "column": this.$.filter.value})
	} 
	else
	{
		this.$.filtro2.value = ""
		var column = this.model.find({ "column": this.$.filter2.value})
	}
	if (column[0].type)
	{
		var tipo = ""
		switch(column[0].type) {
		case "string":
			tipo = "text"
		break;
		case "boolean":
			tipo = "boolean"
		break;
		case "integer":
			tipo = "number"
		break;
		case "float":
			tipo = "float"
		break;
		case "date":
			tipo = "date"
		break;
		default:
			tipo = "text"
		}
		if (n!= 2)
		{
			this.$.select.className = "hide"
			this.$.filtro.className = ""
			this.tipo = tipo
		} 
		else
		{
			this.$.select2.className = "hide"
			this.$.filtro2.className = ""
			this.tipo2 = tipo
		}	
	}
	else
	{
		if (n!= 2)
		{
			this.$.select.className = ""
			this.$.filtro.className = "hide"
			this.opts = []
			for (i=0; i< column[0].enum.length; i++)
				this.push("opts", {"op": column[0].enum[i], "des": column[0].enumdes[i]})
		}
		else
		{
			this.$.select2.className = ""
			this.$.filtro2.className = "hide"
			this.opts2 = []
			for (i=0; i< column[0].enum.length; i++)
				this.push("opts2", {"op": column[0].enum[i], "des": column[0].enumdes[i]})
		}
	}
	},
	menu: function() {
		
	},
	print: function() {
		ga('send', 'event', 'ProfileResource', 'ProfileResource_print')
		window.print()
	},
	download: function() {
		ga('send', 'event', 'ProfileResource', 'ProfileResource_download')
		var x2js = new X2JS();
		var datoi = this.data.data
		for (i=0; i<datoi.length; i++)
		{
			delete datoi[i].$loki
			delete datoi[i].meta
			delete datoi[i].createdAt
			delete datoi[i].updatedAt
		}
		var dato = { "data": datoi }
		var xml_data = x2js.json2xml_str(dato)
		xml_data = "<x>"+xml_data+"</x>"
		this.download_data = 'data:application/xml;charset=utf-8,'+xml_data
		this.$.link.click()		
	},
	item_menu_toggle: function(e){
		this.key = Number(e.toElement.offsetParent.key)
		this.$.menu_dialog.style.top = e.toElement.offsetParent.offsetTop+20+"px"
		this.$.menu_dialog.style.left = "30px"
		this.$.menu_dialog.open()
	},
  display: function(e) {
	ga('send', 'event', 'ProfileResource', 'ProfileResource_display')
	this.$.menu_dialog.close()
	var filtro = {"id": this.key}
	var item = this.data.find(filtro)[0]
	this.$.ProfileResource_display_dialog.open_display_dialog(item)
  },
  edit: function(e) {
	ga('send', 'event', 'ProfileResource', 'ProfileResource_edit')
	this.$.menu_dialog.close()
	var filtro = {"id": this.key}
	var item = this.data.find(filtro)[0]
	this.$.ProfileResource_edit_dialog.open_dialog(item)
  },
  delete: function(e) {
	ga('send', 'event', 'ProfileResource', 'ProfileResource_delete')
	this.$.menu_dialog.close()
	var filtro = {"id": this.key}
	var item = this.data.find(filtro)[0]
	this.$.ProfileResource_delete_dialog.open_delete_dialog(item)
  },
  new: function() {
	ga('send', 'event', 'ProfileResource', 'ProfileResource_new')
	this.$.ProfileResource_new_dialog.open_dialog()
  },
  reload: function() {
	this.$.ajax.generateRequest()
  },
  load_data: function() {
	ga('send', 'event', 'ProfileResource', 'ProfileResource_load_data')
	while(this.data.data[0]) {
        this.data.remove(this.data.data[0])
      }
	/** Validate Resource Authorized **/
	if (typeof this.$.ajax.lastResponse.auth_msg !== 'undefined')
	{
		alert(this.$.ajax.lastResponse.auth_msg)
		return
	}
	for (i=0; i< this.$.ajax.lastResponse.length; i++)
	{
		if (this.$.ajax.lastResponse[i].profile){
			this.$.ajax.lastResponse[i].profile_id = this.$.ajax.lastResponse[i].profile.id
			this.$.ajax.lastResponse[i].profile_name = this.$.ajax.lastResponse[i].profile.name
		} else
		{
			this.$.ajax.lastResponse[i].profile_id = 0
			this.$.ajax.lastResponse[i].profile_name = ""
		}
		if (this.$.ajax.lastResponse[i].resource){
			this.$.ajax.lastResponse[i].resource_id = this.$.ajax.lastResponse[i].resource.id
			this.$.ajax.lastResponse[i].resource_name = this.$.ajax.lastResponse[i].resource.name
		} else
		{
			this.$.ajax.lastResponse[i].resource_id = 0
			this.$.ajax.lastResponse[i].resource_name = ""
		}
		this.$.ajax.lastResponse[i].data_des= this.enums.data[this.$.ajax.lastResponse[i].data]	
		this.data.insert(this.$.ajax.lastResponse[i])
	}
	this.filter()
  },
  ajax_error: function() {
	ga('send', 'event', 'ProfileResource', 'ProfileResource_ajax_error')
	console.log(this.$.ajax.lastError)
	alert("<%= lng('Error Processing Request: ')%>", this.$.ajax.lastError)
  }
//USER POINT - List Functions
//END USER POINT - List Functions
});
</script>
</dom-module>
<top-bar><%= lng("%s %s",lng("List"),lng("ProfileResource"))%></top-bar>
<paper-material class="card" elevation="2">
	<ProfileResource-list id="ProfileResource_list"></ProfileResource-list>
</paper-material>
</body>
</html>
